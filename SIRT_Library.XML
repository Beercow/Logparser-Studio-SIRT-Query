<?xml version="1.0" encoding="utf-8"?>
<ArrayOfLPQuery xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <LPQuery>
    <QueryName>WMI: wmiprvse execution</QueryName>
    <QueryDescription>Microsoft-Windows-WMI-Activity%4Operational(EventID 5857)
Indicates time of wmiprvse execution and path to provider dll.</QueryDescription>
    <QueryData>SELECT TimeGenerated AS Date,
EXTRACT_TOKEN(Strings, 0,'|') AS ProviderName,
EXTRACT_TOKEN(Strings, 1,'|') AS Code,
EXTRACT_TOKEN(Strings, 2,'|') AS HostProcess,
EXTRACT_TOKEN(Strings, 3,'|') AS ProcessID,
EXTRACT_TOKEN(Strings, 4,'|') AS ProviderPath
FROM '[LOGFILEPATH]'
WHERE EventID = 5857
</QueryData>
    <QueryID>7b8c75a7-9790-4eee-9931-6e22e3f4a492</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2018-10-02T07:38:31.0844877-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Windows Firewall: Rule was deleted (group by rulename)</QueryName>
    <QueryDescription>Microsoft-Windows-Windows Firewall With Advanced Security%4Firewall.evtx (EventID 2006)</QueryDescription>
    <QueryData>Select COUNT(*) as CNT,
	extract_token(Strings, 1, '|') as rulename
FROM '[LOGFILEPATH]'
WHERE EventID = 2006
GROUP BY rulename
ORDER BY CNT DESC</QueryData>
    <QueryID>e193bffe-b0ee-479a-9c55-3b2f2963bb62</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:36:18.3496705-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Windows Firewall: Rule was deleted (group by changedapp)</QueryName>
    <QueryDescription>Microsoft-Windows-Windows Firewall With Advanced Security%4Firewall.evtx (EventID 2006)</QueryDescription>
    <QueryData>Select COUNT(*) as CNT,
	extract_token(Strings, 3, '|') as changedapp
FROM '[LOGFILEPATH]'
WHERE EventID = 2006
GROUP BY changedapp
ORDER BY CNT DESC</QueryData>
    <QueryID>9602bd5b-1816-4e87-b0c8-e12a683f2fde</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:36:07.1499239-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Windows Firewall: Rule was deleted</QueryName>
    <QueryDescription>Microsoft-Windows-Windows Firewall With Advanced Security%4Firewall.evtx (EventID 2006)</QueryDescription>
    <QueryData>Select TimeGenerated AS Date,
	extract_token(Strings, 1, '|') as rulename,
	extract_token(strings, 3, '|') as changedapp
FROM '[LOGFILEPATH]'
WHERE EventID = 2006</QueryData>
    <QueryID>f20b6c02-c92d-4a61-a304-e6557958c340</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:35:52.6538012-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Windows Firewall: Rule was changed (group by servicename)</QueryName>
    <QueryDescription>Microsoft-Windows-Windows Firewall With Advanced Security%4Firewall.evtx (EventID 2005)</QueryDescription>
    <QueryData>Select COUNT(*) as CNT,
	extract_token(strings, 4, '|') as servicename
FROM '[LOGFILEPATH]'
WHERE EventID = 2005
GROUP BY servicename
ORDER BY CNT DESC</QueryData>
    <QueryID>b91552ac-a564-40a0-be89-b1c66e2a883d</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:35:26.742104-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Windows Firewall: Rule was changed (group by rulename)</QueryName>
    <QueryDescription>Microsoft-Windows-Windows Firewall With Advanced Security%4Firewall.evtx (EventID 2005)</QueryDescription>
    <QueryData>Select COUNT(*) as CNT,
	extract_token(strings, 1, '|') as rulename
FROM '[LOGFILEPATH]'
WHERE EventID = 2005
GROUP BY rulename
ORDER BY CNT DESC</QueryData>
    <QueryID>2bcb64a5-af85-424a-895d-e0f52a86fd82</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:35:08.7332558-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Windows Firewall: Rule was changed (group by modifyingapp)</QueryName>
    <QueryDescription>Microsoft-Windows-Windows Firewall With Advanced Security%4Firewall.evtx (EventID 2005)</QueryDescription>
    <QueryData>Select COUNT(*) as CNT,
	extract_token(strings, 22, '|') as modifyingapp
FROM '[LOGFILEPATH]'
WHERE EventID = 2005
GROUP BY modifyingapp
ORDER BY CNT DESC</QueryData>
    <QueryID>3829cd08-7084-4fd0-836b-48eb4fbb4d82</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T14:12:38.3600958-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Windows Firewall: Rule was changed (group by localport)</QueryName>
    <QueryDescription>Microsoft-Windows-Windows Firewall With Advanced Security%4Firewall.evtx (EventID 2005)</QueryDescription>
    <QueryData>Select COUNT(*) as CNT,
	extract_token(strings, 7, '|') as localport
FROM '[LOGFILEPATH]'
WHERE EventID = 2005
GROUP BY localport
ORDER BY CNT DESC</QueryData>
    <QueryID>e9bfdd78-0808-4cdc-a745-646ee0eb6be3</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:34:54.3023196-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Windows Firewall: Rule was changed (group by apppath)</QueryName>
    <QueryDescription>Microsoft-Windows-Windows Firewall With Advanced Security%4Firewall.evtx (EventID 2005)</QueryDescription>
    <QueryData>Select COUNT(*) as CNT,
	extract_token(strings, 3, '|') as apppath
FROM '[LOGFILEPATH]'
WHERE EventID = 2005
GROUP BY apppath
ORDER BY CNT DESC</QueryData>
    <QueryID>5e296024-4e3c-465a-aaba-a2cd9d65c1f9</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:34:40.9743264-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Windows Firewall: Rule was changed</QueryName>
    <QueryDescription>Microsoft-Windows-Windows Firewall With Advanced Security%4Firewall.evtx (EventID 2005)</QueryDescription>
    <QueryData>Select TimeGenerated AS Date,
	extract_token(Strings, 1, '|') as rulename,
	extract_token(Strings, 3, '|') AS apppath, 
	extract_token(Strings, 4, '|') AS servicename,
	extract_token(strings, 7, '|') AS localport,
	extract_token(strings, 22, '|') as modifyingapp  
FROM '[LOGFILEPATH]'
WHERE EventID = 2005</QueryData>
    <QueryID>d98b924e-c400-49f9-901a-dcf35bb25703</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:36:50.5406759-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Windows Firewall: Rule was added (group by apppath)</QueryName>
    <QueryDescription>Microsoft-Windows-Windows Firewall With Advanced Security%4Firewall.evtx (EventID 2004)</QueryDescription>
    <QueryData>Select COUNT(*) as CNT,
	extract_token(strings, 3, '|') as apppath
FROM '[LOGFILEPATH]'
WHERE EventID = 2004
GROUP BY apppath
ORDER BY CNT DESC</QueryData>
    <QueryID>b512cd4d-bda6-4429-9758-8748c9d2a172</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:34:19.1502844-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Windows Firewall: New exception rule was added</QueryName>
    <QueryDescription>Microsoft-Windows-Windows Firewall With Advanced Security%4Firewall.evtx (EventID 2004)</QueryDescription>
    <QueryData>Select TimeGenerated AS Date,
	extract_token(strings, 1, '|') as rulename,
	extract_token(strings, 3, '|') as apppath,
	extract_token(strings, 22, '|') as changedapp
FROM '[LOGFILEPATH]'
WHERE EventID = 2004</QueryData>
    <QueryID>b14f0d18-0902-4ead-b74c-e0ba9c0b813d</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:34:06.6224757-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Windows Firewall: Firewall blocked inbound connections to the application, but did not notify the user (group by application)</QueryName>
    <QueryDescription>Microsoft-Windows-Windows Firewall With Advanced Security%4Firewall.evtx (EventID 2011)</QueryDescription>
    <QueryData>Select COUNT(*) as CNT,
	extract_token(strings, 1, '|') as file
FROM '[LOGFILEPATH]'
WHERE EventID = 2011
GROUP BY file
ORDER BY CNT DESC
</QueryData>
    <QueryID>7cd6a480-576c-4a62-bcb7-3fca17e4188c</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:33:47.9502742-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Windows Firewall: Firewall blocked inbound connections to the application, but did not notify the user</QueryName>
    <QueryDescription>Microsoft-Windows-Windows Firewall With Advanced Security%4Firewall.evtx (EventID 2011)</QueryDescription>
    <QueryData>Select Timegenerated as date,
	extract_token(strings, 1, '|') as file,
	extract_token(strings, 4, '|') as port
FROM '[LOGFILEPATH]'
WHERE EventID = 2011
</QueryData>
    <QueryID>a6aaa9b0-1737-4920-be3e-85c9fa5adcfb</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:33:34.2223332-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Task Scheduler: User updated a task (group by user)</QueryName>
    <QueryDescription>Microsoft-Windows-TaskScheduler%4Operational.evtx (EventID 140)</QueryDescription>
    <QueryData>Select count(*) as cnt,
	extract_token(strings, 1, '|') as user
FROM '[LOGFILEPATH]'
WHERE EventID = 140
GROUP BY user
ORDER BY CNT DESC
</QueryData>
    <QueryID>862f9e29-accf-44ee-b6de-b047d0b3a64c</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:55:17.7915208-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Task Scheduler: User updated a task (group by taskname)</QueryName>
    <QueryDescription>Microsoft-Windows-TaskScheduler%4Operational.evtx (EventID 140)</QueryDescription>
    <QueryData>Select count(*) as cnt,
	extract_token(strings, 0, '|') as taskname
FROM '[LOGFILEPATH]'
WHERE EventID = 140
GROUP BY taskname
ORDER BY CNT DESC
</QueryData>
    <QueryID>b438fa7d-e136-4a96-9c85-913219014673</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:56:06.9432387-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Task Scheduler: User updated a task</QueryName>
    <QueryDescription>Microsoft-Windows-TaskScheduler%4Operational.evtx (EventID 140)</QueryDescription>
    <QueryData>Select TimeGenerated as Date,
	extract_token(strings, 0, '|') as taskname,
	extract_token(strings, 1, '|') as user
FROM '[LOGFILEPATH]'
WHERE EventID = 140

</QueryData>
    <QueryID>cec2be21-3e79-4a76-8dae-76f68eaffca6</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:54:20.6084261-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Task Scheduler: User deleted a task (group by user)</QueryName>
    <QueryDescription>Microsoft-Windows-TaskScheduler%4Operational.evtx (EventID 141)</QueryDescription>
    <QueryData>Select count(*) as cnt,
	extract_token(strings, 1, '|') as user
FROM '[LOGFILEPATH]'
WHERE EventID = 141
GROUP BY user
ORDER BY CNT DESC
</QueryData>
    <QueryID>5421482b-c623-49dd-90c1-ad7ae4a215ae</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:57:43.6624475-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Task Scheduler: User deleted a task (group by taskname)</QueryName>
    <QueryDescription>Microsoft-Windows-TaskScheduler%4Operational.evtx (EventID 141)</QueryDescription>
    <QueryData>Select count(*) as cnt,
	extract_token(strings, 0, '|') as taskname
FROM '[LOGFILEPATH]'
WHERE EventID = 141
GROUP BY taskname
ORDER BY CNT DESC
</QueryData>
    <QueryID>10f50bab-416c-468a-aec4-1ae5daa9c585</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:57:58.3923608-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Task Scheduler: User deleted a task</QueryName>
    <QueryDescription>Microsoft-Windows-TaskScheduler%4Operational.evtx (EventID 141)</QueryDescription>
    <QueryData>Select TimeGenerated as Date,
	extract_token(strings, 0, '|') as taskname,
	extract_token(strings, 1, '|') as user
FROM '[LOGFILEPATH]'
WHERE EventID = 141
</QueryData>
    <QueryID>c14815a5-ada0-4092-9472-d9a0ae210727</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:59:05.4765478-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Task Scheduler: Task was run (group by taskname)</QueryName>
    <QueryDescription>Microsoft-Windows-TaskScheduler%4Operational.evtx (EventID 100)</QueryDescription>
    <QueryData>Select count(*) as cnt,
	extract_token(strings,0, '|') as taskname
FROM '[LOGFILEPATH]'
WHERE EventID = 100
GROUP BY taskname
ORDER BY CNT DESC
</QueryData>
    <QueryID>4f49685e-cf16-4bcb-a192-b97a3ebceeda</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:49:18.0811693-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Task Scheduler: Task was run</QueryName>
    <QueryDescription>Microsoft-Windows-TaskScheduler%4Operational.evtx (EventID 100)</QueryDescription>
    <QueryData>Select TimeGenerated AS Date,
	extract_token(strings,0, '|') as taskname,
	extract_token(strings, 1, '|') as username
FROM '[LOGFILEPATH]'
WHERE EventID = 100
</QueryData>
    <QueryID>51ab27ca-bb4c-4b8d-ab01-caed234562f0</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:47:45.5765261-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Task Scheduler: Action was executed (group by action)</QueryName>
    <QueryDescription>Microsoft-Windows-TaskScheduler%4Operational.evtx (EventID 200)</QueryDescription>
    <QueryData>Select count(*) as cnt,
	extract_token(strings, 1, '|') as taskaction
FROM '[LOGFILEPATH]'
WHERE EventID = 200
GROUP BY taskaction
ORDER BY CNT DESC

</QueryData>
    <QueryID>71d2131f-06fb-4e55-b8ac-b851b3db8e3d</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:52:23.4407046-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Task Scheduler: Action was executed</QueryName>
    <QueryDescription>Microsoft-Windows-TaskScheduler%4Operational.evtx (EventID 200)</QueryDescription>
    <QueryData>Select TimeGenerated AS Date,
	extract_token(strings,0, '|') as taskname,
	extract_token(strings, 1, '|') as taskaction
FROM '[LOGFILEPATH]'
WHERE EventID = 200

</QueryData>
    <QueryID>0efb45f7-fd7b-458c-85d3-ee32c8e02e22</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:51:18.2089-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>System: Startup/Shutdown</QueryName>
    <QueryDescription>System.evtx (EventID 6005,6006,6008,6009,6013,1074,1076)</QueryDescription>
    <QueryData>SELECT TimeGenerated as Date,
       Message
FROM '\\localhost\System'
WHERE EventID in (6005;6006;6008;6009;6013;1074;1076)
ORDER BY Date</QueryData>
    <QueryID>8d4b0f0c-d603-4644-844b-66d44235fa20</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2018-05-15T14:17:29.2946225-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>System: Service actions (group by service name)</QueryName>
    <QueryDescription>System.evtx (EventID 7036)</QueryDescription>
    <QueryData>Select COUNT(*) as CNT,
	extract_token(strings, 0, '|') AS ServiceName
FROM '[LOGFILEPATH]'
WHERE EventID = 7036
GROUP BY servicename
ORDER BY CNT DESC</QueryData>
    <QueryID>3489782d-160b-48a6-8f42-828c585f6b96</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2018-02-19T11:34:48.3224361-06:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>System: Service actions</QueryName>
    <QueryDescription>System.evtx (EventID 7036)</QueryDescription>
    <QueryData>Select TimeGenerated AS Date,
	extract_token(strings, 0, '|') AS ServiceName
FROM '[LOGFILEPATH]'
WHERE EventID = 7036</QueryData>
    <QueryID>94a6b946-c726-4ed9-b5cf-9c968a26daf5</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:32:48.7499637-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>System: New Service was installed in system</QueryName>
    <QueryDescription>System.evtx (EventID 7045)</QueryDescription>
    <QueryData>Select TimeGenerated AS Date,
	extract_token(strings, 0, '|') AS ServiceName,
	extract_token(strings, 1, '|') AS ServicePath,
	extract_token(strings, 4, '|') AS ServiceUser
FROM '[LOGFILEPATH]'
WHERE EventID = 7045</QueryData>
    <QueryID>a93a3f82-da72-4307-a7a4-1df74f6d0823</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:32:31.1667407-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Sysmon: Service State Change</QueryName>
    <QueryDescription>Microsoft-Windows-Sysmon%4Operational.evtx (EventID 4)</QueryDescription>
    <QueryData>SELECT      
      TimeGenerated,
      EventID,
      EXTRACT_TOKEN(Strings,0,'|') AS UtcTime,
      EXTRACT_TOKEN(Strings,1,'|') AS State,
      EXTRACT_TOKEN(Strings,2,'|') AS Version,
      EXTRACT_TOKEN(Strings,3,'|') AS SchemaVersion
FROM '[LOGFILEPATH]' 
WHERE EventID=4</QueryData>
    <QueryID>63372363-993c-4db8-8be3-ac7a8d1e6508</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2018-02-07T06:52:29.5995044-06:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Sysmon: Registry Value Set</QueryName>
    <QueryDescription>Microsoft-Windows-Sysmon%4Operational.evtx (EventID 13)</QueryDescription>
    <QueryData>SELECT      
      TimeGenerated,
      EventID,
      EXTRACT_TOKEN(Strings,0,'|') As EventType,
      EXTRACT_TOKEN(Strings,1,'|') As UtcTime,
      EXTRACT_TOKEN(Strings,2,'|') AS ProcessGUID,
      EXTRACT_TOKEN(Strings,3,'|') AS ProcessID,
      EXTRACT_TOKEN(Strings,4,'|') AS Image,
      EXTRACT_TOKEN(Strings,5,'|') As TargetObject,
      EXTRACT_TOKEN(Strings,6,'|') As Details 
FROM '[LOGFILEPATH]' 
WHERE EventID=13 </QueryData>
    <QueryID>ad599f11-f8d0-41c6-9a06-81a739b25a19</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2018-02-07T06:57:41.3989625-06:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Sysmon: Registry Object Added or Removed</QueryName>
    <QueryDescription>Microsoft-Windows-Sysmon%4Operational.evtx (EventID 12)</QueryDescription>
    <QueryData>SELECT      
      TimeGenerated,
      EventID,
      EXTRACT_TOKEN(Strings,0,'|') As EventType,
      EXTRACT_TOKEN(Strings,1,'|') AS UtcTime,
      EXTRACT_TOKEN(Strings,2,'|') As ProcessGuid,
      EXTRACT_TOKEN(Strings,3,'|') AS ProcessID,
      EXTRACT_TOKEN(Strings,4,'|') AS Image,
      EXTRACT_TOKEN(Strings,5,'|') As TargetObject 
FROM '[LOGFILEPATH]' 
WHERE EventID=12</QueryData>
    <QueryID>2cc28b29-7189-4826-af0a-e7280b34ccf7</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2018-02-07T07:06:10.38207-06:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Sysmon: process create terminate</QueryName>
    <QueryDescription>Microsoft-Windows-Sysmon%4Operational.evtx (EventID 1,5) 
Sysmon v8.0</QueryDescription>
    <QueryData>Select ComputerName, SID,
	CASE EventID When 1 Then 'Process Create' ELSE 'Process terminated' END AS TaskCategory,
       extract_token(strings,0,'|') AS Rule,
	extract_token(strings,1,'|') AS UtcTime,
	extract_token(strings,2,'|') AS ProcGuid,
	extract_token(strings,3,'|') AS ProcId,
	extract_token(strings,4,'|') AS ImagePath,
	extract_token(strings,5,'|') AS FileVersion,
       extract_token(strings,6,'|') AS Description,
       extract_token(strings,7,'|') AS Product,
       extract_token(strings,8,'|') AS Company,
       extract_token(strings,9,'|') AS CommandLine,
	extract_token(strings,10,'|') AS CurrentDirectory,
	extract_token(strings,11,'|') AS User,
	extract_token(strings,12,'|') AS LogonGuid,
	extract_token(strings,13,'|') AS LogonId,
       extract_token(strings,14,'|') AS TerminalSessionId,
	extract_token(strings,15,'|') AS IntegLvl,
	extract_token(strings,16,'|') AS Hashs,
	extract_token(strings,17,'|') AS ParProcGuid,
	extract_token(strings,18,'|') AS ParProcId,
	extract_token(strings,19,'|') AS ParImagePath,
	extract_token(strings,20,'|') AS ParParams
from '[LOGFILEPATH]' 
where EventID in (1;5)</QueryData>
    <QueryID>4b3eaf26-e42d-47af-8632-6cecd92338b1</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2018-09-13T09:37:15.6442004-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Sysmon: network socket count</QueryName>
    <QueryDescription>Microsoft-Windows-Sysmon%4Operational.evtx (EventID 3)</QueryDescription>
    <QueryData>Select  
	extract_token(strings,8,'|') AS SrcIp,
	extract_token(strings,10,'|') AS SrcPrt,
	extract_token(strings,13,'|') AS DstIp,
	extract_token(strings,15,'|') AS DstPrt,
	count(*) AS SockCount
from '[LOGFILEPATH]'
where EventID = 3
group by SrcIp, SrcPrt, DstIp, DstPrt
order by SockCount desc</QueryData>
    <QueryID>dae12eec-97ba-4045-9cde-f9e1a92e09b8</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:42:02.8595235-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Sysmon: network connections ip list external</QueryName>
    <QueryDescription>Microsoft-Windows-Sysmon%4Operational.evtx (EventID 3)</QueryDescription>
    <QueryData>Select
extract_token(strings,13,'|') AS DstIp,
count(*) AS ConCount,
max(extract_token(strings,0,'|')) AS LastDateUtc
from '[LOGFILEPATH]'
where EventID = 3 and extract_token(strings,12,'|') = 'false' and 
	not (DstIp like '10.%' or DstIp like '192.168.%' or
	     DstIp like '172.1[6-9].%' or DstIp like '172.2_.%' or DstIp like '172.3[01].%' )
group by DstIp
order by ConCount desc</QueryData>
    <QueryID>adab1dcd-54aa-4913-a0b3-08e806feb55b</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:41:51.0359004-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Sysmon: network connection count</QueryName>
    <QueryDescription>Microsoft-Windows-Sysmon%4Operational.evtx (EventID 3)</QueryDescription>
    <QueryData>Select  
	extract_token(strings,8,'|') AS SrcIp,
	extract_token(strings,13,'|') AS DstIp,
	count(*) AS ConCount
from '[LOGFILEPATH]'
where EventID = 3
group by SrcIp, DstIp
order by ConCount desc</QueryData>
    <QueryID>ca9b3ab5-394a-41d2-bd1e-d617773b3a04</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:41:36.3150366-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Sysmon: network connection</QueryName>
    <QueryDescription>Microsoft-Windows-Sysmon%4Operational.evtx (EventID 3)</QueryDescription>
    <QueryData>Select RecordNumber,TimeGenerated,EventID,SourceName,ComputerName,SID, 
	extract_token(strings,0,'|') AS UtcTime,
	extract_token(strings,1,'|') AS ProcGuid,
	extract_token(strings,2,'|') AS ProcId,
	extract_token(strings,3,'|') AS ImagePath,
	extract_token(strings,4,'|') AS User,
	extract_token(strings,5,'|') AS Prot,
	extract_token(strings,6,'|') AS Init,
	extract_token(strings,7,'|') AS SrcIsIp6,
	extract_token(strings,8,'|') AS SrcIp,
	extract_token(strings,9,'|') AS SrcHost,
	extract_token(strings,10,'|') AS SrcPrt,
	extract_token(strings,11,'|') AS SrcPrtNam,
	extract_token(strings,12,'|') AS DstIsIp6,
	extract_token(strings,13,'|') AS DstIp,
	extract_token(strings,14,'|') AS DstHost,
	extract_token(strings,15,'|') AS DstPrt,
	extract_token(strings,16,'|') AS DstPrtNam
from '[LOGFILEPATH]'
where EventID = 3</QueryData>
    <QueryID>3d9f1274-7b3c-42c3-bd85-84ee05cd48f9</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:41:17.035188-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Sysmon: image load wininet winsock32</QueryName>
    <QueryDescription>Microsoft-Windows-Sysmon%4Operational.evtx (EventID 7)</QueryDescription>
    <QueryData>
select 
	extract_token(strings,3,'|') AS ImagePath,
	extract_token(strings,4,'|') AS ImageLoaded,
	COUNT(*) AS LoadCount
from '[LOGFILEPATH]'
where EventID = 7 and (imageloaded like '%wininet.dll%' or imageloaded like '%winsock32.dll%')
group by ImagePath, ImageLoaded
order by LoadCount desc</QueryData>
    <QueryID>8245fe4c-ac3f-4e52-9a8a-b4129eea465e</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:41:00.8911516-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Sysmon: image load</QueryName>
    <QueryDescription>Microsoft-Windows-Sysmon%4Operational.evtx (eventID 7)</QueryDescription>
    <QueryData>Select RecordNumber,TimeGenerated,EventID,SourceName,ComputerName,SID, 
	extract_token(strings,0,'|') AS UtcTime,
	extract_token(strings,1,'|') AS ProcGuid,
	extract_token(strings,2,'|') AS ProcId,
	extract_token(strings,3,'|') AS ImagePath,
	extract_token(strings,4,'|') AS ImageLoaded,
	extract_token(strings,5,'|') AS HashType,
	extract_token(strings,6,'|') AS Hash,
	extract_token(strings,7,'|') AS Signed,
	extract_token(strings,8,'|') AS Signature
from '[LOGFILEPATH]'
where EventID = 7</QueryData>
    <QueryID>69607233-6f2d-4c52-b5ee-1e6becfa179b</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:40:45.3740907-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Sysmon: File Stream Created</QueryName>
    <QueryDescription>Microsoft-Windows-Sysmon%4Operational.evtx (EventID 15)</QueryDescription>
    <QueryData>
SELECT      
      TimeGenerated,
      EventID,
      EXTRACT_TOKEN(Strings,1,'|') AS ProcessGUID,
      EXTRACT_TOKEN(Strings,2,'|') AS ProcessID,
      EXTRACT_TOKEN(Strings,3,'|') As Image,
      EXTRACT_TOKEN(Strings,4,'|') As TargetFileName,
      EXTRACT_TOKEN(Strings,5,'|') AS CreationUtcTime,
      EXTRACT_TOKEN(Strings,6,'|') AS Hash     
FROM '[LOGFILEPATH]'
WHERE EventID=15</QueryData>
    <QueryID>1a53b19b-9c76-42e7-8d9d-9f860cd0a70d</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2018-02-07T07:09:45.7710885-06:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Sysmon: File Created</QueryName>
    <QueryDescription>Microsoft-Windows-Sysmon%4Operational.evtx (EventID 11)</QueryDescription>
    <QueryData>
SELECT      
      TimeGenerated,
      EventID,
      EXTRACT_TOKEN(Strings,1,'|') AS ProcessGUID,
      EXTRACT_TOKEN(Strings,2,'|') AS ProcessID,
      EXTRACT_TOKEN(Strings,3,'|') AS Image,
      EXTRACT_TOKEN(Strings,4,'|') As TargetFileName,
      EXTRACT_TOKEN(Strings,5,'|') As CreationTimeUTC   
FROM '[LOGFILEPATH]' 
WHERE EventID=11  </QueryData>
    <QueryID>612ff133-e088-4f93-ab91-9fe8c603f6d0</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2018-02-07T07:12:13.3637347-06:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Sysmon: file create time backwards</QueryName>
    <QueryDescription>Microsoft-Windows-Sysmon%4Operational.evtx (EventID 2)</QueryDescription>
    <QueryData>Select RecordNumber,TimeGenerated,EventID,SourceName,ComputerName,SID, 
	extract_token(strings,0,'|') AS UtcTime,
	extract_token(strings,1,'|') AS ProcGuid,
	extract_token(strings,2,'|') AS ProcId,
	extract_token(strings,3,'|') AS ImagePath,
	extract_token(strings,4,'|') AS TargetPath,
	extract_token(strings,5,'|') AS NewCreateUtc,
	extract_token(strings,6,'|') AS PrevCreateUtc
from '[LOGFILEPATH]'
where EventID = 2 and NewCreateUtc &lt; PrevCreateUtc and ImagePath not like '%chrome.exe%'</QueryData>
    <QueryID>2595c774-bad5-4054-a2ac-df79eca29bcc</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:40:36.3959898-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Sysmon: file create time</QueryName>
    <QueryDescription>Microsoft-Windows-Sysmon%4Operational.evtx (EventID 2)</QueryDescription>
    <QueryData>Select RecordNumber,TimeGenerated,EventID,SourceName,ComputerName,SID, 
	extract_token(strings,0,'|') AS UtcTime,
	extract_token(strings,1,'|') AS ProcGuid,
	extract_token(strings,2,'|') AS ProcId,
	extract_token(strings,3,'|') AS ImagePath,
	extract_token(strings,4,'|') AS TargetPath,
	extract_token(strings,5,'|') AS NewCreateUtc,
	extract_token(strings,6,'|') AS PrevCreateUtc
from '[LOGFILEPATH]'
where EventID = 2</QueryData>
    <QueryID>0e8551b8-dd05-4609-8eab-246406c7eb3f</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:39:58.8757886-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Sysmon: file create program count</QueryName>
    <QueryDescription>Microsoft-Windows-Sysmon%4Operational.evtx (EventID 2)</QueryDescription>
    <QueryData>Select  
	extract_token(strings,3,'|') AS ImagePath,
	count(*) AS ProgramCount
from '[LOGFILEPATH]'
where EventID = 2 
group by ImagePath
order by ProgramCount desc</QueryData>
    <QueryID>3f5a0eff-0757-47a1-8061-a8992b2dc4af</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:39:41.7724484-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Sysmon: file create file count no chrome</QueryName>
    <QueryDescription>Microsoft-Windows-Sysmon%4Operational.evtx (EventID 2)</QueryDescription>
    <QueryData>Select  
	extract_token(strings,3,'|') AS ImagePath,
	extract_token(strings,4,'|') AS TargetPath,
	count(*) AS FileCount
from '[LOGFILEPATH]'
where EventID = 2 and ImagePath not like '%chrome.exe%'
group by ImagePath, TargetPath
order by FileCount desc</QueryData>
    <QueryID>adc62c03-1cdd-46be-8f9a-3430a02e6c77</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:39:04.4288377-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Sysmon: file create file count</QueryName>
    <QueryDescription>Microsoft-Windows-Sysmon%4Operational.evtx (EventID 2)</QueryDescription>
    <QueryData>Select  
	extract_token(strings,3,'|') AS ImagePath,
	extract_token(strings,4,'|') AS TargetPath,
	count(*) AS FileCount
from '[LOGFILEPATH]'
where EventID = 2
group by ImagePath, TargetPath
order by FileCount desc</QueryData>
    <QueryID>033cedf5-175a-4b8a-9ad8-78376ac5c118</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:38:51.3879448-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Sysmon: Driver Loaded</QueryName>
    <QueryDescription>Microsoft-Windows-Sysmon%4Operational.evtx (EventID 6)</QueryDescription>
    <QueryData>SELECT      
      TimeGenerated,
      EventID,
      EXTRACT_TOKEN(Strings,1,'|') AS ImageLoaded,
      EXTRACT_TOKEN(Strings,2,'|') AS Hashes,
      EXTRACT_TOKEN(Strings,3,'|') AS Signed,
      EXTRACT_TOKEN(Strings,4,'|') AS Signature,
      EXTRACT_TOKEN(Strings,5,'|') AS SigStatus   
FROM '[LOGFILEPATH]' 
WHERE EventID=6</QueryData>
    <QueryID>6aedd14c-a04e-4645-a561-846624d8c951</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2018-02-07T07:14:41.8047018-06:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Sysmon: driver load</QueryName>
    <QueryDescription>Microsoft-Windows-Sysmon%4Operational.evtx (EventID 6) 
Sysmon v7.01</QueryDescription>
    <QueryData>Select RecordNumber,TimeGenerated,EventID,SourceName,ComputerName,SID, 
	extract_token(strings,0,'|') AS UtcTime,
	extract_token(strings,1,'|') AS ImageLoaded,
	extract_token(strings,2,'|') AS Hashs,
	extract_token(strings,3,'|') AS Signed,
	extract_token(strings,4,'|') AS Signature,
       extract_token(strings,5,'|') AS SigStatus
from '[LOGFILEPATH]'
where EventID = 6</QueryData>
    <QueryID>5aa3c1b4-4809-48bb-ada7-bf4b8677ca6a</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2018-02-22T13:31:30.3050342-06:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>SEP: tralog.log</QueryName>
    <QueryDescription>Firewall Traffic log</QueryDescription>
    <QueryData>SELECT
TO_TIMESTAMP(ADD(DIV(TO_REAL(HEX_TO_INT(Field2)),TO_REAL(10000000)), TO_REAL(TIMESTAMP('1601','yyyy')))) AS Time(UTC),
HEX_TO_INT(Field14) AS Severity,
CASE TO_STRING(Field8) WHEN '1' THEN 'Incoming' ELSE
    CASE TO_STRING(Field8) WHEN '2' THEN 'Outgoing' ELSE
        TO_STRING(Field8)
    END
END AS Direction,
CASE Field16 WHEN NULL THEN STRCAT(TO_STRING(HEX_TO_INT(SUBSTR(HEX_TO_HEX32(Field5),0,2))),STRCAT('.',STRCAT(TO_STRING(HEX_TO_INT(SUBSTR(HEX_TO_HEX32(Field5),2,2))),STRCAT('.',STRCAT(TO_STRING(HEX_TO_INT(SUBSTR(HEX_TO_HEX32(Field5),4,2))),STRCAT('.',TO_STRING(HEX_TO_INT(SUBSTR(HEX_TO_HEX32(Field5),6,2))))))))) ELSE
    STRCAT(STRCAT(STRCAT(Field16, ' ['),STRCAT(TO_STRING(HEX_TO_INT(SUBSTR(HEX_TO_HEX32(Field5),0,2))),STRCAT('.',STRCAT(TO_STRING(HEX_TO_INT(SUBSTR(HEX_TO_HEX32(Field5),2,2))),STRCAT('.',STRCAT(TO_STRING(HEX_TO_INT(SUBSTR(HEX_TO_HEX32(Field5),4,2))),STRCAT('.',TO_STRING(HEX_TO_INT(SUBSTR(HEX_TO_HEX32(Field5),6,2)))))))))),']')
END AS Remote_Host,
Field20 AS Remote_MAC,
HEX_TO_INT(Field7) AS Remote_Port,
STRCAT(TO_STRING(HEX_TO_INT(SUBSTR(HEX_TO_HEX32(Field4),0,2))),STRCAT('.',STRCAT(TO_STRING(HEX_TO_INT(SUBSTR(HEX_TO_HEX32(Field4),2,2))),STRCAT('.',STRCAT(TO_STRING(HEX_TO_INT(SUBSTR(HEX_TO_HEX32(Field4),4,2))),STRCAT('.',TO_STRING(HEX_TO_INT(SUBSTR(HEX_TO_HEX32(Field4),6,2))))))))) AS Local_Host,
Field19 AS Local_MAC,
HEX_TO_INT(Field6) AS Local_Port,
Field18 AS Application,
Field22 AS User,
Field23 AS User_Domain,
Field21 AS Location,
HEX_TO_INT(TO_STRING(Field11)) AS Occurrence,
TO_TIMESTAMP(ADD(DIV(TO_REAL(HEX_TO_INT(Field10)),TO_REAL(10000000)), TO_REAL(TIMESTAMP('1601','yyyy')))) AS Begin_Time,
TO_TIMESTAMP(ADD(DIV(TO_REAL(HEX_TO_INT(Field9)),TO_REAL(10000000)), TO_REAL(TIMESTAMP('1601','yyyy')))) AS End_Time,
Field17 AS Rule
FROM '[LOGFILEPATH]'</QueryData>
    <QueryID>53dbf72f-0ec5-453a-b0d4-2815744f662e</QueryID>
    <LogType>TSVLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2018-04-26T07:00:07.6612016-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>SEP: seclog.log</QueryName>
    <QueryDescription>Security log (IPS events mainly)</QueryDescription>
    <QueryData>/* nFields 39 */
SELECT 
TO_TIMESTAMP(ADD(DIV(TO_REAL(HEX_TO_INT(Field2)),TO_REAL(10000000)), TO_REAL(TIMESTAMP('1601','yyyy')))) AS Date_and_Time,
CASE Field4 WHEN '00000003' THEN 'Critical'
    WHEN '00000007' THEN 'Major' ELSE
        Field4 END AS Severity,
CASE Field9 WHEN '00000002' THEN 'Outgoing' 
    WHEN '00000001' THEN 'Incoming' END AS Direction,
REVERSEDNS(STRCAT(TO_STRING(HEX_TO_INT(SUBSTR(HEX_TO_HEX32(Field6),0,2))),STRCAT('.',STRCAT(TO_STRING(HEX_TO_INT(SUBSTR(HEX_TO_HEX32(Field6),2,2))),STRCAT('.',STRCAT(TO_STRING(HEX_TO_INT(SUBSTR(HEX_TO_HEX32(Field6),4,2))),STRCAT('.',TO_STRING(HEX_TO_INT(SUBSTR(HEX_TO_HEX32(Field6),6,2)))))))))) AS Remote_Host_Name,
STRCAT(TO_STRING(HEX_TO_INT(SUBSTR(HEX_TO_HEX32(Field6),0,2))),STRCAT('.',STRCAT(TO_STRING(HEX_TO_INT(SUBSTR(HEX_TO_HEX32(Field6),2,2))),STRCAT('.',STRCAT(TO_STRING(HEX_TO_INT(SUBSTR(HEX_TO_HEX32(Field6),4,2))),STRCAT('.',TO_STRING(HEX_TO_INT(SUBSTR(HEX_TO_HEX32(Field6),6,2))))))))) AS Remote_Host_IP,
HEX_TO_INT(TO_STRING(Field27)) AS Remote_Port,
REVERSEDNS(STRCAT(TO_STRING(HEX_TO_INT(SUBSTR(HEX_TO_HEX32(Field5),0,2))),STRCAT('.',STRCAT(TO_STRING(HEX_TO_INT(SUBSTR(HEX_TO_HEX32(Field5),2,2))),STRCAT('.',STRCAT(TO_STRING(HEX_TO_INT(SUBSTR(HEX_TO_HEX32(Field5),4,2))),STRCAT('.',TO_STRING(HEX_TO_INT(SUBSTR(HEX_TO_HEX32(Field5),6,2)))))))))) AS Local_Host_Name,
STRCAT(TO_STRING(HEX_TO_INT(SUBSTR(HEX_TO_HEX32(Field5),0,2))),STRCAT('.',STRCAT(TO_STRING(HEX_TO_INT(SUBSTR(HEX_TO_HEX32(Field5),2,2))),STRCAT('.',STRCAT(TO_STRING(HEX_TO_INT(SUBSTR(HEX_TO_HEX32(Field5),4,2))),STRCAT('.',TO_STRING(HEX_TO_INT(SUBSTR(HEX_TO_HEX32(Field5),6,2))))))))) AS Local_Host_IP,
HEX_TO_INT(Field28) AS Local_Port,
Field16 AS Application,
HEX_TO_INT(Field23) AS Signature_ID,
HEX_TO_INT(Field24) AS Signature_SubID,
Field31 AS Signature_Name, 
Field32 AS Intrusion-URL,
Field21 AS User,
Field22 AS User_Domain,
Field20 AS Location,
TO_INT(Field12) AS Occurrences,
TO_TIMESTAMP(ADD(DIV(TO_REAL(HEX_TO_INT(Field11)),TO_REAL(10000000)), TO_REAL(TIMESTAMP('1601','yyyy')))) AS Beginning_Time,
TO_TIMESTAMP(ADD(DIV(TO_REAL(HEX_TO_INT(Field10)),TO_REAL(10000000)), TO_REAL(TIMESTAMP('1601','yyyy')))) AS End_Time,
Field39 AS SHA-256,
Field14 AS Description

FROM '[LOGFILEPATH]'</QueryData>
    <QueryID>54c14d9a-813d-45b0-8c1f-031a89f55fa7</QueryID>
    <LogType>TSVLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2019-05-03T12:47:31.5531327-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>SEP: Daily AV logs</QueryName>
    <QueryDescription>C:\ProgramData\Symantec\Symantec Endpoint Protection\CurrentVersion\Data\Logs\AV</QueryDescription>
    <QueryData>SELECT Index,
STRCAT(TO_STRING(ADD(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Text,0,','),2,2)),1)),STRCAT('/',STRCAT(TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Text,0,','),4,2))),STRCAT('/',STRCAT(TO_STRING(ADD(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Text,0,','),0,2)),1970)),STRCAT(' ',STRCAT(CASE STRLEN(TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Text,0,','),6,2)))) WHEN 1 THEN STRCAT('0',TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Text,0,','),6,2)))) ELSE TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Text,0,','),6,2)))END,STRCAT(':',STRCAT(CASE STRLEN(TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Text,0,','),8,2)))) WHEN 1 THEN STRCAT('0',TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Text,0,','),8,2)))) ELSE TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Text,0,','),8,2)))END,STRCAT(':',CASE STRLEN(TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Text,0,','),10,2)))) WHEN 1 THEN STRCAT('0',TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Text,0,','),10,2)))) ELSE TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Text,0,','),10,2)))END)))))))))) AS Time(UTC),
EXTRACT_TOKEN(Text,4,',') AS Computer,
EXTRACT_TOKEN(Text,5,',') AS User,
CASE TO_STRING(EXTRACT_TOKEN(Text,10,',')) WHEN '1' THEN 'Quarantine' 
    WHEN '2' Then 'Rename'
        WHEN '3' Then 'Delete'
            WHEN '4' Then 'Leave Alone'
                WHEN '5' Then 'Clean'
                    WHEN '6' Then 'Remove Macros'
                        WHEN '7' Then 'Save file as...'
                            WHEN '8' Then 'Sent to backend'
                                WHEN '9' Then 'Restore from Quarantine'
                                    WHEN '10' Then 'Rename Back (unused)'
                                        WHEN '11' Then 'Undo Action'
                                            WHEN '12' Then 'Error'
                                                WHEN '13' Then 'Backup to quarantine (backup view)'
                                                    WHEN '14' Then 'Pending Analysis'
                                                        WHEN '15' Then 'Partially Fixed'
                                                            WHEN '16' Then 'Terminate Process Required'
                                                                WHEN '17' Then 'Exclude from Scanning'
                                                                    WHEN '18' Then 'Reboot Processing'
                                                                        WHEN '19' Then 'Clean by Deletion'
                                                                            WHEN '20' Then 'Access Denied' ELSE
                                                                                TO_STRING(EXTRACT_TOKEN(Text,10,','))
END AS Action,
EXTRACT_TOKEN(Text,13,',') AS Description,
EXTRACT_TOKEN(Text,6,',') AS Virus,
EXTRACT_TOKEN(Text,7,',') AS File,
EXTRACT_TOKEN(REPLACE_CHR(EXTRACT_TOKEN(Text,59,','),'\u0009',','),4,',') AS HASH,
EXTRACT_TOKEN(Text,69,',') AS Creator_For_Dropper,
EXTRACT_TOKEN(Text,36,',') AS Domain,
EXTRACT_TOKEN(Text,37,',') AS MAC
FROM '[LOGFILEPATH]' 
WHERE STRLEN(File) NOT IN (0)
ORDER BY Time(UTC) DESC</QueryData>
    <QueryID>e7977171-79c1-4ec9-889a-3a68f46bad2c</QueryID>
    <LogType>TEXTLINELOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2019-04-18T11:15:33.9176881-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>SEP: Client Management (Tamper Protect)</QueryName>
    <QueryDescription>C:\Users\&lt;user_name&gt;\AppData\Local\Symantec\Symantec Endpoint Protection\Logs\*.Log

C:\ProgramData\Symantec\Symantec Endpoint Protection\CurrentVersion\Data\Logs\AV\*.Log</QueryDescription>
    <QueryData>SELECT LogFilename,
CASE EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),22,',') WHEN '301' THEN EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),9,',')
    ELSE EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),4,',')
END AS Computer,
CASE EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),22,',') WHEN '301' THEN EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),10,',')
    ELSE EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),5,',')
END AS User,
CASE EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),22,',') WHEN '301' THEN STRCAT(EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),24,','),STRCAT(' (PID ',STRCAT(EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),23,','),')')))
    ELSE STRCAT(EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),19,','),STRCAT(' (PID ',STRCAT(EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),18,','),')')))
END AS Actor,
CASE EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),22,',') WHEN '301' THEN EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),28,',')
    ELSE EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),13,',')
END AS Target,
CASE EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),22,',') WHEN '301' THEN STRCAT(EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),27,','),STRCAT(' (PID ',STRCAT(EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),26,','),')')))
    ELSE STRCAT(EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),22,','),STRCAT(' (PID ',STRCAT(EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),21,','),')')))
END AS Target_Process,
CASE EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),22,',') WHEN '301' THEN STRCAT(TO_STRING(ADD(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),5,','),0,','),2,2)),1)),STRCAT('/',STRCAT(TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),5,','),0,','),4,2))),STRCAT('/',STRCAT(TO_STRING(ADD(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),5,','),0,','),0,2)),1970)),STRCAT(' ',STRCAT(CASE STRLEN(TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),5,','),0,','),6,2)))) WHEN 1 THEN STRCAT('0',TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),5,','),0,','),6,2)))) ELSE TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),5,','),0,','),6,2)))END,STRCAT(':',STRCAT(CASE STRLEN(TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),5,','),0,','),8,2)))) WHEN 1 THEN STRCAT('0',TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),5,','),0,','),8,2)))) ELSE TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),5,','),0,','),8,2)))END,STRCAT(':',CASE STRLEN(TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),5,','),0,','),10,2)))) WHEN 1 THEN STRCAT('0',TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),5,','),0,','),10,2)))) ELSE TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),5,','),0,','),10,2)))END))))))))))
    ELSE STRCAT(TO_STRING(ADD(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),0,','),0,','),2,2)),1)),STRCAT('/',STRCAT(TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),0,','),0,','),4,2))),STRCAT('/',STRCAT(TO_STRING(ADD(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),0,','),0,','),0,2)),1970)),STRCAT(' ',STRCAT(CASE STRLEN(TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),0,','),0,','),6,2)))) WHEN 1 THEN STRCAT('0',TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),0,','),0,','),6,2)))) ELSE TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),0,','),0,','),6,2)))END,STRCAT(':',STRCAT(CASE STRLEN(TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),0,','),0,','),8,2)))) WHEN 1 THEN STRCAT('0',TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),0,','),0,','),8,2)))) ELSE TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),0,','),0,','),8,2)))END,STRCAT(':',CASE STRLEN(TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),0,','),0,','),10,2)))) WHEN 1 THEN STRCAT('0',TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),0,','),0,','),10,2)))) ELSE TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),0,','),0,','),10,2)))END))))))))))
END AS Time(UTC)
FROM '[LOGFILEPATH]'
WHERE (Index &gt; 1 AND EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),22,',') = '301' AND LogFilename LIKE '%AVMan.log') OR (EXTRACT_TOKEN(REPLACE_CHR(Text,'\u0009',','),17,',') = '301' AND LogFilename NOT LIKE '%AVMan.log')
</QueryData>
    <QueryID>724a9cb8-5ced-41f8-b600-ce4e65cb0cf5</QueryID>
    <LogType>TEXTLINELOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2019-04-04T10:09:32.4538182-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>SEP: Client Management (System)</QueryName>
    <QueryDescription>syslog.log</QueryDescription>
    <QueryData>/* -headerRow:off -nSkiplines:1 -nFields:9 */
SELECT FileName,
	CASE Field2
		WHEN 'CVE'
			THEN ''
		WHEN NULL
			THEN ''
		ELSE TO_STRING(TO_TIMESTAMP(ADD (
						DIV(SUB(TO_REAL(HEX_TO_INT(Field2)), TO_REAL(116444736000000000)), TO_REAL(10000000))
						,TO_REAL(TIMESTAMP (
								'1970'
								,'yyyy'
								))
						)), 'M/d/yyyy HH:mm:ss')
		END AS DateAndTime,
	CASE TO_STRING(Field5)
		WHEN '00000000'
			THEN 'Information'
		WHEN '00000001'
			THEN 'Warning'
		WHEN '00000002'
			THEN 'Error'
		ELSE ''
		END AS Severity,
	CASE Field2
		WHEN 'CVE'
			THEN Field1
		WHEN 'SYLINK'
			THEN Field1
		WHEN 'Smc'
			THEN Field1
		WHEN NULL
			THEN Field1
		ELSE Field7
		END AS Summary,
	CASE Field2
		WHEN 'CVE'
			THEN Field2
		WHEN 'SYLINK'
			THEN Field2
		WHEN 'Smc'
			THEN Field2
		WHEN NULL
			THEN Field2
		ELSE Field8 
		END AS Type,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN HEX_TO_INT(SUBSTR(Field9, 2, 8))
		END AS Size_(bytes),
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE STRCAT(TO_STRING(ADD (
						HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Field9, 0, ','), 2, 2))
						,1
						)), STRCAT('/', STRCAT(TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Field9, 0, ','), 4, 2))), STRCAT('/', STRCAT(TO_STRING(ADD (
										HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Field9, 0, ','), 0, 2))
										,1970
										)), STRCAT(' ', STRCAT(CASE STRLEN(TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Field9, 0, ','), 6, 2))))
											WHEN 1
												THEN STRCAT('0', TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Field9, 0, ','), 6, 2))))
											ELSE TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Field9, 0, ','), 6, 2)))
											END, STRCAT(':', STRCAT(CASE STRLEN(TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Field9, 0, ','), 8, 2))))
													WHEN 1
														THEN STRCAT('0', TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Field9, 0, ','), 8, 2))))
													ELSE TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Field9, 0, ','), 8, 2)))
													END, STRCAT(':', CASE STRLEN(TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Field9, 0, ','), 10, 2))))
														WHEN 1
															THEN STRCAT('0', TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Field9, 0, ','), 10, 2))))
														ELSE TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Field9, 0, ','), 10, 2)))
														END))))))))))
		END AS LOG:Time(UTC),
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE CASE EXTRACT_TOKEN(Field9, 1, ',')
				WHEN '1'
					THEN 'IS_ALERT'
				WHEN '2'
					THEN 'SCAN_STOP'
				WHEN '3'
					THEN 'SCAN_START'
				WHEN '4'
					THEN 'PATTERN_UPDATE'
				WHEN '5'
					THEN 'INFECTION'
				WHEN '6'
					THEN 'FILE_NOTOPEN'
				WHEN '7'
					THEN 'LOAD_PATTERN'
				WHEN '8'
					THEN 'MESSAGE_INFO'
				WHEN '9'
					THEN 'MESSAGE_ERROR'
				WHEN '10'
					THEN 'CHECKSUM'
				WHEN '11'
					THEN 'TRAP'
				WHEN '12'
					THEN 'CONFIG_CHANGE'
				WHEN '13'
					THEN 'SHUTDOWN'
				WHEN '14'
					THEN 'STARTUP'
				WHEN '16'
					THEN 'PATTERN_DOWNLOAD'
				WHEN '17'
					THEN 'TOO_MANY_VIRUSES'
				WHEN '18'
					THEN 'FWD_TO_QSERVER'
				WHEN '19'
					THEN 'SCANDLVR'
				WHEN '20'
					THEN 'BACKUP'
				WHEN '21'
					THEN 'SCAN_ABORT'
				WHEN '22'
					THEN 'RTS_LOAD_ERROR'
				WHEN '23'
					THEN 'RTS_LOAD'
				WHEN '24'
					THEN 'RTS_UNLOAD'
				WHEN '25'
					THEN 'REMOVE_CLIENT'
				WHEN '26'
					THEN 'SCAN_DELAYED'
				WHEN '27'
					THEN 'SCAN_RESTART'
				WHEN '28'
					THEN 'ADD_SAVROAMCLIENT_TOSERVER'
				WHEN '29'
					THEN 'REMOVE_SAVROAMCLIENT_FROMSERVER'
				WHEN '30'
					THEN 'LICENSE_WARNING'
				WHEN '31'
					THEN 'LICENSE_ERROR'
				WHEN '32'
					THEN 'LICENSE_GRACE'
				WHEN '33'
					THEN 'UNAUTHORIZED_COMM'
				WHEN '34'
					THEN 'LOG:FWD_THRD_ERR'
				WHEN '35'
					THEN 'LICENSE_INSTALLED'
				WHEN '36'
					THEN 'LICENSE_ALLOCATED'
				WHEN '37'
					THEN 'LICENSE_OK'
				WHEN '38'
					THEN 'LICENSE_DEALLOCATED'
				WHEN '39'
					THEN 'BAD_DEFS_ROLLBACK'
				WHEN '40'
					THEN 'BAD_DEFS_UNPROTECTED'
				WHEN '41'
					THEN 'SAV_PROVIDER_PARSING_ERROR'
				WHEN '42'
					THEN 'RTS_ERROR'
				WHEN '43'
					THEN 'COMPLIANCE_FAIL'
				WHEN '44'
					THEN 'COMPLIANCE_SUCCESS'
				WHEN '45'
					THEN 'SECURITY_SYMPROTECT_POLICYVIOLATION'
				WHEN '46'
					THEN 'ANOMALY_START'
				WHEN '47'
					THEN 'DETECTIOM_ACTION_TAKEN'
				WHEN '48'
					THEN 'REMEDIATION_ACTION_PENDING'
				WHEN '49'
					THEN 'REMEDIATION_ACTION_FAILED'
				WHEN '50'
					THEN 'REMEDIATION_ACTION_SUCCESSFUL'
				WHEN '51'
					THEN 'ANOMALY_FINISH'
				WHEN '52'
					THEN 'COMMS_LOGIN_FAILED'
				WHEN '53'
					THEN 'COMMS_LOGIN_SUCCESS'
				WHEN '54'
					THEN 'COMMS_UNAUTHORIZED_COMM'
				WHEN '55'
					THEN 'CLIENT_INSTALL_AV'
				WHEN '56'
					THEN 'CLIENT_INSTALL_FW'
				WHEN '57'
					THEN 'CLIENT_UNINSTALL'
				WHEN '58'
					THEN 'CLIENT_UNINSTALL_ROLLBACK'
				WHEN '59'
					THEN 'COMMS_SERVER_GROUP_ROOT_CERT_ISSUE'
				WHEN '60'
					THEN 'COMMS_SERVER_CERT_ISSUE'
				WHEN '61'
					THEN 'COMMS_TRUSTED_ROOT_CHANGE'
				WHEN '62'
					THEN 'OMMS_SERVER_CERT_STARTUP_FAILED'
				WHEN '63'
					THEN 'CLIENT_CHECKIN'
				WHEN '64'
					THEN 'CLIENT_NO_CHECKIN'
				WHEN '65'
					THEN 'SCAN_SUSPENDED'
				WHEN '66'
					THEN 'SCAN RESUMED'
				WHEN '67'
					THEN 'SCAN_DURATION_INSUFFICIENT'
				WHEN '68'
					THEN 'CLIENT_MOVE'
				WHEN '69'
					THEN 'SCAN_FAILED_ENHANCED'
				WHEN '70'
					THEN 'COMPLIANCE_FAILEDAUDIT'
				WHEN '71'
					THEN 'HEUR_THREAT_NOW_WHITELISTED'
				WHEN '72'
					THEN 'INTERESTING_PROCESS_DETECTED_START'
				WHEN '73'
					THEN 'LOAD_ERROR_BASH'
				WHEN '74'
					THEN 'LOAD_ERROR_BASH_DEFINITIONS'
				WHEN '75'
					THEN 'INTERESTING_PROCESS_DETECTED_FINISH'
				WHEN '76'
					THEN 'BASH_NOT_SUPPORTED_FOR_OS'
				WHEN '77'
					THEN 'HEUR_THREAT_NOW_KNOWN'
				WHEN '78'
					THEN 'DISABLE_BASH'
				WHEN '79'
					THEN 'ENABLE_BASH'
				WHEN '80'
					THEN 'DEFS_LOAD_FAILED'
				WHEN '81'
					THEN 'LOCALREP_CACHE_SERVER_ERROR'
				WHEN '82'
					THEN 'REPUTATION_CHECK_TIMEOUT'
				WHEN '83'
					THEN 'SYMEPSECFILTER_DRIVER_ERROR'
				WHEN '84'
					THEN 'VSIC_COMMUNICATION_WARNING'
				WHEN '85'
					THEN 'VSIC_COMMUNICATION_RESTORED'
				WHEN '86'
					THEN 'ELAM_LOAD_FAILED'
				WHEN '87'
					THEN 'ELAM_INVALID_OS'
				WHEN '88'
					THEN 'ELAM_ENABLE'
				WHEN '89'
					THEN 'ELAM_DISABLE'
				WHEN '90'
					THEN 'ELAM_BAD'
				WHEN '91'
					THEN 'ELAM_BAD_REPORTED_AS_UNKNOWN'
				WHEN '92'
					THEN 'DISABLE_SYMPROTECT'
				WHEN '93'
					THEN 'ENABLE_SYMPROTECT'
				WHEN '94'
					THEN 'NETSEC_EOC_PARSE_FAILED'
				ELSE EXTRACT_TOKEN(Field9, 1, ',')
				END
		END AS LOG:Event,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE CASE EXTRACT_TOKEN(Field9, 2, ',')
				WHEN '1'
					THEN 'Infection'
				WHEN '2'
					THEN 'Summary'
				WHEN '3'
					THEN 'Pattern'
				WHEN '4'
					THEN 'Security'
				ELSE EXTRACT_TOKEN(Field9, 2, ',')
				END
		END AS LOG:Category,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE CASE EXTRACT_TOKEN(Field9, 3, ',')
				WHEN '0'
					THEN 'Scheduled'
				WHEN '1'
					THEN 'Manual'
				WHEN '2'
					THEN 'Real_Time'
				WHEN '3'
					THEN 'Integrity_Shield'
				WHEN '6'
					THEN 'Console'
				WHEN '7'
					THEN 'VPDOWN'
				WHEN '8'
					THEN 'System'
				WHEN '9'
					THEN 'Startup'
				WHEN '10'
					THEN 'Idle'
				WHEN '11'
					THEN 'DefWatch'
				WHEN '12'
					THEN 'Licensing'
				WHEN '13'
					THEN 'Manual_Quarantine'
				WHEN '14'
					THEN 'SymProtect'
				WHEN '15'
					THEN 'Reboot_Processing'
				WHEN '16'
					THEN 'Bash'
				WHEN '17'
					THEN 'SymElam'
				WHEN '18'
					THEN 'PowerEraser'
				WHEN '19'
					THEN 'EOCScan'
				WHEN '100'
					THEN 'LOCAL_END'
				WHEN '101'
					THEN 'Client'
				WHEN '102'
					THEN 'Forewarded'
				WHEN '256'
					THEN 'Transport_Client'
				ELSE EXTRACT_TOKEN(Field9, 3, ',')
				END
		END AS LOG:Logger,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 4, ',')
		END AS LOG:Computer,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 5, ',')
		END AS LOG:User,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 6, ',')
		END AS LOG:Virus,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 7, ',')
		END AS LOG:File,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE CASE EXTRACT_TOKEN(Field9, 8, ',')
				WHEN '4294967295#'
					THEN 'Invalid'
				WHEN '1'
					THEN 'Quarantine'
				WHEN '2'
					THEN 'Rename'
				WHEN '3'
					THEN 'Delete'
				WHEN '4'
					THEN 'Leave Alone'
				WHEN '5'
					THEN 'Clean'
				WHEN '6'
					THEN 'Remove Macros'
				WHEN '7'
					THEN 'Save file as...'
				WHEN '8'
					THEN 'Send to backend'
				WHEN '9'
					THEN 'Restore from Quarantine'
				WHEN '10'
					THEN 'Rename Back (unused)'
				WHEN '11'
					THEN 'Undo Action'
				WHEN '12'
					THEN 'Error'
				WHEN '13'
					THEN 'Backup to quarantine (backup view)'
				WHEN '14'
					THEN 'Pending Analysis'
				WHEN '16'
					THEN 'Terminate Process Required'
				WHEN '17'
					THEN 'Exclude from Scanning'
				WHEN '18'
					THEN 'Reboot Processing'
				WHEN '19'
					THEN 'Clean by Deletion'
				WHEN '20'
					THEN 'Access Denied'
				WHEN '21'
					THEN 'TERMINATE PROCESS ONLY'
				WHEN '22'
					THEN 'NO REPAIR'
				WHEN '23'
					THEN 'FAIL'
				WHEN '24'
					THEN 'RUN POWERTOOL'
				WHEN '25'
					THEN 'NO REPAIR POWERTOOL'
				WHEN '110'
					THEN 'INTERESTING PROCESS CAL'
				WHEN '111'
					THEN 'INTERESTING PROCESS DETECTED'
				WHEN '1000'
					THEN 'INTERESTING PROCESS HASHED DETECTED'
				WHEN '1001'
					THEN 'DNS HOST FILE EXCEPTOION'
				ELSE EXTRACT_TOKEN(Field9, 8, ',')
				END
		END AS LOG:WantedAction1,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE CASE EXTRACT_TOKEN(Field9, 9, ',')
				WHEN '4294967295#'
					THEN 'Invalid'
				WHEN '1'
					THEN 'Quarantine'
				WHEN '2'
					THEN 'Rename'
				WHEN '3'
					THEN 'Delete'
				WHEN '4'
					THEN 'Leave Alone'
				WHEN '5'
					THEN 'Clean'
				WHEN '6'
					THEN 'Remove Macros'
				WHEN '7'
					THEN 'Save file as...'
				WHEN '8'
					THEN 'Send to backend'
				WHEN '9'
					THEN 'Restore from Quarantine'
				WHEN '10'
					THEN 'Rename Back (unused)'
				WHEN '11'
					THEN 'Undo Action'
				WHEN '12'
					THEN 'Error'
				WHEN '13'
					THEN 'Backup to quarantine (backup view)'
				WHEN '14'
					THEN 'Pending Analysis'
				WHEN '16'
					THEN 'Terminate Process Required'
				WHEN '17'
					THEN 'Exclude from Scanning'
				WHEN '18'
					THEN 'Reboot Processing'
				WHEN '19'
					THEN 'Clean by Deletion'
				WHEN '20'
					THEN 'Access Denied'
				WHEN '21'
					THEN 'TERMINATE PROCESS ONLY'
				WHEN '22'
					THEN 'NO REPAIR'
				WHEN '23'
					THEN 'FAIL'
				WHEN '24'
					THEN 'RUN POWERTOOL'
				WHEN '25'
					THEN 'NO REPAIR POWERTOOL'
				WHEN '110'
					THEN 'INTERESTING PROCESS CAL'
				WHEN '111'
					THEN 'INTERESTING PROCESS DETECTED'
				WHEN '1000'
					THEN 'INTERESTING PROCESS HASHED DETECTED'
				WHEN '1001'
					THEN 'DNS HOST FILE EXCEPTOION'
				ELSE EXTRACT_TOKEN(Field9, 9, ',')
				END
		END AS LOG:WantedAction2,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE CASE EXTRACT_TOKEN(Field9, 10, ',')
				WHEN '4294967295#'
					THEN 'Invalid'
				WHEN '1'
					THEN 'Quarantine'
				WHEN '2'
					THEN 'Rename'
				WHEN '3'
					THEN 'Delete'
				WHEN '4'
					THEN 'Leave Alone'
				WHEN '5'
					THEN 'Clean'
				WHEN '6'
					THEN 'Remove Macros'
				WHEN '7'
					THEN 'Save file as...'
				WHEN '8'
					THEN 'Send to backend'
				WHEN '9'
					THEN 'Restore from Quarantine'
				WHEN '10'
					THEN 'Rename Back (unused)'
				WHEN '11'
					THEN 'Undo Action'
				WHEN '12'
					THEN 'Error'
				WHEN '13'
					THEN 'Backup to quarantine (backup view)'
				WHEN '14'
					THEN 'Pending Analysis'
				WHEN '16'
					THEN 'Terminate Process Required'
				WHEN '17'
					THEN 'Exclude from Scanning'
				WHEN '18'
					THEN 'Reboot Processing'
				WHEN '19'
					THEN 'Clean by Deletion'
				WHEN '20'
					THEN 'Access Denied'
				WHEN '21'
					THEN 'TERMINATE PROCESS ONLY'
				WHEN '22'
					THEN 'NO REPAIR'
				WHEN '23'
					THEN 'FAIL'
				WHEN '24'
					THEN 'RUN POWERTOOL'
				WHEN '25'
					THEN 'NO REPAIR POWERTOOL'
				WHEN '110'
					THEN 'INTERESTING PROCESS CAL'
				WHEN '111'
					THEN 'INTERESTING PROCESS DETECTED'
				WHEN '1000'
					THEN 'INTERESTING PROCESS HASHED DETECTED'
				WHEN '1001'
					THEN 'DNS HOST FILE EXCEPTOION'
				ELSE EXTRACT_TOKEN(Field9, 10, ',')
				END
		END AS LOG:RealAction,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE CASE EXTRACT_TOKEN(Field9, 11, ',')
				WHEN '48'
					THEN 'Heuristic'
				WHEN '64'
					THEN 'Reputation'
				WHEN '80'
					THEN 'Hack Tools'
				WHEN '96'
					THEN 'Spyware'
				WHEN '112'
					THEN 'Trackware'
				WHEN '128'
					THEN 'Dialers'
				WHEN '144'
					THEN 'Remote Access'
				WHEN '160'
					THEN 'Adware'
				WHEN '176'
					THEN 'Joke Programs'
				WHEN '224'
					THEN 'Heuristic Application'
				ELSE EXTRACT_TOKEN(Field9, 11, ',')
				END
		END AS LOG:Virus_Type,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 12, ',')
		END AS LOG:Flags,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 13, ',')
		END AS LOG:Description,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 14, ',')
		END AS LOG:ScanID,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 15, ',')
		END AS LOG:New_Ext,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 16, ',')
		END AS LOG:Group_ID,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 17, ',')
		END AS LOG:Event_Data,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 18, ',')
		END AS LOG:VBin_ID,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 19, ',')
		END AS LOG:Virus_ID,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 20, ',')
		END AS LOG:Quarantine_Forward_Status,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 21, ',')
		END AS LOG:Access,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 22, ',')
		END AS LOG:SDN_Status,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 23, ',')
		END AS LOG:Compressed,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 24, ',')
		END AS LOG:Depth,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 25, ',')
		END AS LOG:Still_Infected,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 26, ',')
		END AS LOG:Def_Info,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 27, ',')
		END AS LOG:Def_Sequence_Number,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 28, ',')
		END AS LOG:Clean_Info,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 29, ',')
		END AS LOG:Delete_Info,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 30, ',')
		END AS LOG:Backup_ID,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 31, ',')
		END AS LOG:Parent,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 32, ',')
		END AS LOG:GUID,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 33, ',')
		END AS LOG:Client_Group,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 34, ',')
		END AS LOG:Address,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 35, ',')
		END AS LOG:Domain_Name,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 36, ',')
		END AS LOG:NT_Domain,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 37, ',')
		END AS LOG:MAC_Address,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 38, ',')
		END AS LOG:Version,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 39, ',')
		END AS LOG:Remote_Machine,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 40, ',')
		END AS LOG:Remote_Machine_IP,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 41, ',')
		END AS LOG:Action_1_Status,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 42, ',')
		END AS LOG:Action_2_Status,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 43, ',')
		END AS LOG:License_Feature_Name,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 44, ',')
		END AS LOG:License_Feature_Version,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 45, ',')
		END AS LOG:License_Serial_Number,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 46, ',')
		END AS LOG:License_Fulfillment_ID,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 47, ',')
		END AS LOG:License_Start_Date,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 48, ',')
		END AS LOG:License_Expiration_Date,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 49, ',')
		END AS LOG:License_LifeCycle,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 50, ',')
		END AS LOG:License_Seats_Total,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 51, ',')
		END AS LOG:License_Seats,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 52, ',')
		END AS LOG:Error_Code,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 53, ',')
		END AS LOG:License_Seats_Delta,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 54, ',')
		END AS LOG:Status,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 55, ',')
		END AS LOG:Domain_GUID,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 56, ',')
		END AS LOG:LOG:Session_GUID,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 57, ',')
		END AS LOG:VBin_Session_ID,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 58, ',')
		END AS LOG:Login_Domain,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 59, ',')
		END AS LOG:Event_Data_2,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE CASE EXTRACT_TOKEN(Field9, 60, ',')
				WHEN '1'
					THEN 'HeuristicTrojanWorm'
				WHEN '2'
					THEN 'HeuristicKeyLogger'
				WHEN '100'
					THEN 'CommercialRemoteControl'
				WHEN '101'
					THEN 'CommercialKeyLogger'
				WHEN '200'
					THEN 'Cookie'
				WHEN '300'
					THEN 'Shields'
				END
		END AS LOG:Eraser_Category_ID,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE CASE EXTRACT_TOKEN(Field9, 61, ',')
				WHEN '1'
					THEN 'MALWARE'
				WHEN '2'
					THEN 'SECURITY_RISK'
				WHEN '3'
					THEN 'POTENTIALLY_UNWANTED_APPLICATIONS'
				WHEN '4'
					THEN 'EXPERIMENTAL_HEURISTIC'
				WHEN '5'
					THEN 'LEGACY_VIRAL'
				WHEN '6'
					THEN 'LEGACY_NON_VIRAL'
				WHEN '7'
					THEN 'VATEGORY_CRIMEWARE'
				WHEN '8'
					THEN 'ADVANCED_HEURISTICS'
				WHEN '9'
					THEN 'REPUTATION_BACKED_ADVANCED_HEURISTICS'
				WHEN '10'
					THEN 'PREVALENCE_BACKED_ADVANCED_HEURISTICS'
				END
		END AS LOG:Dynamic_Categoryset_ID,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 62, ',')
		END AS LOG:Subcategoryset_ID,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE CASE EXTRACT_TOKEN(Field9, 63, ',')
				WHEN '0'
					THEN 'Application Name'
				WHEN '1'
					THEN 'VID Virus Name'
				END
		END AS LOG:Display_Name_To_Use,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE CASE EXTRACT_TOKEN(Field9, 64, ',')
				WHEN '0'
					THEN 'Good'
				WHEN '1'
					THEN 'Bad'
				WHEN '127'
					THEN 'Unknown'
				END
		END AS LOG:Reputation_Disposition,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 65, ',')
		END AS LOG:Reputation_Confidence,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 66, ',')
		END AS LOG:First_Seen,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 67, ',')
		END AS LOG:Reputation_Prevalence,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 68, ',')
		END AS LOG:Downloaded_URL,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 69, ',')
		END AS LOG:Creator_For_Dropper,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 70, ',')
		END AS LOG:CIDS_State,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 71, ',')
		END AS LOG:Behavior_Risk_Level,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE CASE EXTRACT_TOKEN(Field9, 72, ',')
				WHEN '0'
					THEN 'Traditional'
				WHEN '1'
					THEN 'Heuristic'
				END
		END AS LOG:Detection_Type,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 73, ',')
		END AS LOG:Acknowledge_Text,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE CASE EXTRACT_TOKEN(Field9, 74, ',')
				WHEN '0'
					THEN 'Off'
				WHEN '1'
					THEN 'On'
				WHEN ''
					THEN 'Failed'
				END
		END AS LOG:VSIC_State,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 75, ',')
		END AS LOG:Scan_GUID,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 76, ',')
		END AS LOG:Scan_Duration,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE STRCAT(TO_STRING(ADD (
						HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Field9, 77, ','), 2, 2))
						,1
						)), STRCAT('/', STRCAT(TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Field9, 77, ','), 4, 2))), STRCAT('/', STRCAT(TO_STRING(ADD (
										HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Field9, 77, ','), 0, 2))
										,1970
										)), STRCAT(' ', STRCAT(CASE STRLEN(TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Field9, 77, ','), 6, 2))))
											WHEN 1
												THEN STRCAT('0', TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Field9, 77, ','), 6, 2))))
											ELSE TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Field9, 77, ','), 6, 2)))
											END, STRCAT(':', STRCAT(CASE STRLEN(TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Field9, 77, ','), 8, 2))))
													WHEN 1
														THEN STRCAT('0', TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Field9, 77, ','), 8, 2))))
													ELSE TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Field9, 77, ','), 8, 2)))
													END, STRCAT(':', CASE STRLEN(TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Field9, 77, ','), 10, 2))))
														WHEN 1
															THEN STRCAT('0', TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Field9, 77, ','), 10, 2))))
														ELSE TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Field9, 77, ','), 10, 2)))
														END))))))))))
		END AS LOG:Scan_Start_Time,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE CASE EXTRACT_TOKEN(Field9, 78, ',')
				WHEN '0'
					THEN 'Normal'
				WHEN '1'
					THEN 'Modern (Metro)'
				END
		END AS LOG:TargetApp,
	CASE DIV(STRLEN(Field9), 11)
		WHEN 1
			THEN ''
		WHEN NULL
			THEN ''
		ELSE EXTRACT_TOKEN(Field9, 79, ',')
		END AS LOG:Scan_Command_GUID
FROM '[LOGFILEPATH]' 
WHERE Summary NOT IN ('Smc')
</QueryData>
    <QueryID>7c2d842a-bc71-43ca-b2f5-5149eb029c58</QueryID>
    <LogType>TSVLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2019-04-04T10:02:12.2967582-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>SEP: Client Management (Control)</QueryName>
    <QueryDescription>processlog.log</QueryDescription>
    <QueryData>/* -headerRow:off -nSkipLines:1 -nFields:28 */
SELECT FileName,
    TO_TIMESTAMP(ADD(DIV(SUB(TO_REAL(HEX_TO_INT(Field10)),TO_REAL(116444736000000000)),TO_REAL(10000000)), TO_REAL(TIMESTAMP('1970','yyyy')))) AS DateAndTime,
    HEX_TO_INT(Field4) AS Severity,
    CASE TO_STRING(Field5) WHEN '3' THEN 'Continue'
        WHEN '1' THEN 'Block'
            ELSE TO_STRING(Field5)
    END AS Action,
    Field7 AS Description,
    Field8 AS API,
    Field12 AS RuleName,
    STRCAT(TO_STRING(HEX_TO_INT(SUBSTR(HEX_TO_HEX32(Field23),0,2))),STRCAT('.',STRCAT(TO_STRING(HEX_TO_INT(SUBSTR(HEX_TO_HEX32(Field23),2,2))),STRCAT('.',STRCAT(TO_STRING(HEX_TO_INT(SUBSTR(HEX_TO_HEX32(Field23),4,2))),STRCAT('.',TO_STRING(HEX_TO_INT(SUBSTR(HEX_TO_HEX32(Field23),6,2))))))))) AS IPAddress,
    HEX_TO_INT(TO_STRING(Field13)) AS CallerProcessID,
    Field14 AS CallerProcess,
    Field24 AS DeviceInstanceID,
    Field17 AS Target,
    Field19 AS USER,
    Field20 AS UserDomain,
    Field18 AS Location
FROM '[LOGFILEPATH]' 
WHERE Field23 IS NOT NULL AND Field28 IS NULL
ORDER BY DateAndTime DESC</QueryData>
    <QueryID>3bd0c4ca-9242-4b05-9b70-cb5bc009c4b5</QueryID>
    <LogType>TSVLOG</LogType>
    <QueryCategory>ALL</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2019-04-04T10:02:38.2958631-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>SEP: AVMan.log</QueryName>
    <QueryDescription>AV Management plugin log (contains copies of all AV events)</QueryDescription>
    <QueryData>SELECT
STRCAT(TO_STRING(ADD(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Field6,0,','),2,2)),1)),STRCAT('/',STRCAT(TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Field6,0,','),4,2))),STRCAT('/',STRCAT(TO_STRING(ADD(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Field6,0,','),0,2)),1970)),STRCAT(' ',STRCAT(CASE STRLEN(TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Field6,0,','),6,2)))) WHEN 1 THEN STRCAT('0',TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Field6,0,','),6,2)))) ELSE TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Field6,0,','),6,2)))END,STRCAT(':',STRCAT(CASE STRLEN(TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Field6,0,','),8,2)))) WHEN 1 THEN STRCAT('0',TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Field6,0,','),8,2)))) ELSE TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Field6,0,','),8,2)))END,STRCAT(':',CASE STRLEN(TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Field6,0,','),10,2)))) WHEN 1 THEN STRCAT('0',TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Field6,0,','),10,2)))) ELSE TO_STRING(HEX_TO_INT(SUBSTR(EXTRACT_TOKEN(Field6,0,','),10,2)))END)))))))))) AS Time(UTC),
EXTRACT_TOKEN(Field6,4,',') AS Computer,
EXTRACT_TOKEN(Field6,5,',') AS User,
CASE EXTRACT_TOKEN(Field6,10,',') WHEN '1' THEN 'Quarantine' ELSE 
    CASE EXTRACT_TOKEN(Field6,10,',') WHEN '2' Then 'Rename' ELSE
        CASE EXTRACT_TOKEN(Field6,10,',') WHEN '3' Then 'Delete' ELSE
            CASE EXTRACT_TOKEN(Field6,10,',') WHEN '4' Then 'Leave Alone' ELSE
                CASE EXTRACT_TOKEN(Field6,10,',') WHEN '5' Then 'Clean' ELSE
                    CASE EXTRACT_TOKEN(Field6,10,',') WHEN '6' Then 'Remove Macros' ELSE
                        CASE EXTRACT_TOKEN(Field6,10,',') WHEN '7' Then 'Save file as...' ELSE
                            CASE EXTRACT_TOKEN(Field6,10,',') WHEN '8' Then 'Sent to backend' ELSE
                                CASE EXTRACT_TOKEN(Field6,10,',') WHEN '9' Then 'Restore from Quarantine' ELSE
                                    CASE EXTRACT_TOKEN(Field6,10,',') WHEN '10' Then 'Rename Back (unused)' ELSE
                                        CASE EXTRACT_TOKEN(Field6,10,',') WHEN '11' Then 'Undo Action' ELSE
                                            CASE EXTRACT_TOKEN(Field6,10,',') WHEN '12' Then 'Error' ELSE
                                                CASE EXTRACT_TOKEN(Field6,10,',') WHEN '13' Then 'Backup to quarantine (backup view)' ELSE
                                                    CASE EXTRACT_TOKEN(Field6,10,',') WHEN '14' Then 'Pending Analysis' ELSE
                                                        CASE EXTRACT_TOKEN(Field6,10,',') WHEN '15' Then 'Partially Fixed' ELSE
                                                            CASE EXTRACT_TOKEN(Field6,10,',') WHEN '16' Then 'Terminate Process Required' ELSE
                                                                CASE EXTRACT_TOKEN(Field6,10,',') WHEN '17' Then 'Exclude from Scanning' ELSE
                                                                    CASE EXTRACT_TOKEN(Field6,10,',') WHEN '18' Then 'Reboot Processing' ELSE
                                                                        CASE EXTRACT_TOKEN(Field6,10,',') WHEN '19' Then 'Clean by Deletion' ELSE
                                                                            CASE EXTRACT_TOKEN(Field6,10,',') WHEN '20' Then 'Access Denied' ELSE
                                                                                EXTRACT_TOKEN(Field6,10,',')
                                                                            END
                                                                        END
                                                                    END
                                                                END
                                                            END
                                                        END
                                                    END
                                                END
                                            END
                                        END
                                    END
                                END
                            END
                        END
                    END
                END
            END
        END
    END
END AS Action,
EXTRACT_TOKEN(Field6,13,',') AS Description,
EXTRACT_TOKEN(Field6,6,',') AS Virus,
CASE EXTRACT_TOKEN(Field6,11,',') WHEN '48' THEN 'Heuristic' ELSE
    CASE EXTRACT_TOKEN(Field6,11,',') WHEN '64' THEN 'Reputation' ELSE
        CASE EXTRACT_TOKEN(Field6,11,',') WHEN '80' THEN 'Hack Tools' ELSE
            CASE EXTRACT_TOKEN(Field6,11,',') WHEN '96' THEN 'Spyware' ELSE
                CASE EXTRACT_TOKEN(Field6,11,',') WHEN '112' THEN 'Trackware' ELSE
                    CASE EXTRACT_TOKEN(Field6,11,',') WHEN '128' THEN 'Dialers' ELSE
                        CASE EXTRACT_TOKEN(Field6,11,',') WHEN '144' THEN 'Remote Access' ELSE
                            CASE EXTRACT_TOKEN(Field6,11,',') WHEN '160' THEN 'Adware' ELSE
                                CASE EXTRACT_TOKEN(Field6,11,',') WHEN '176' THEN 'Joke Peograms' ELSE
                                    CASE EXTRACT_TOKEN(Field6,11,',') WHEN '224' THEN 'Heuristic Application' ELSE
                                        EXTRACT_TOKEN(Field6,11,',')
                                    END
                                END
                            END
                        END
                    END
                END
            END
        END
    END
END AS Virus_Type,
EXTRACT_TOKEN(Field6,7,',') AS File,
Field22 AS Hash,
EXTRACT_TOKEN(Field14,52,',') As Creator_For_Dropper
FROM '[LOGFILEPATH]' 
ORDER BY Time(UTC) DESC</QueryData>
    <QueryID>2fa3b1b8-9459-41fa-9897-b47c3cf74860</QueryID>
    <LogType>TSVLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2019-01-31T12:33:21.9784191-06:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Security: User logoff</QueryName>
    <QueryDescription>Security.evtx (EventID 4634)</QueryDescription>
    <QueryData>Select TimeGenerated AS Date,
	EXTRACT_TOKEN(Strings, 1, '|') AS Username,
	EXTRACT_TOKEN(Strings, 2, '|') AS Domain 
FROM '[LOGFILEPATH]'
WHERE EventID = 4634 AND
	Domain NOT IN ('NT AUTHORITY')</QueryData>
    <QueryID>4f49900a-b7d2-4e7f-b69e-3d56a88ff238</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:31:44.4304334-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Security: Unsuccesful logon (NTLM)</QueryName>
    <QueryDescription>Security.evtx (EventID 4625)</QueryDescription>
    <QueryData>SELECT TimeGenerated AS Date,
	EXTRACT_TOKEN(Strings, 5, '|') as Username,
	EXTRACT_TOKEN(Strings, 6, '|') as Domain,
	EXTRACT_TOKEN(Strings, 10, '|') as LogonType,
	EXTRACT_TOKEN(strings, 11, '|') AS AuthPackage,
	EXTRACT_TOKEN(Strings, 13, '|') AS Workstation,
	EXTRACT_TOKEN(Strings, 19, '|') AS SourceIP
FROM '[LOGFILEPATH]'
WHERE EventID = 4625 AND
	Username NOT IN ('SYSTEM'; 'ANONYMOUS LOGON'; 'LOCAL SERVICE'; 'NETWORK SERVICE') AND
		Domain NOT IN ('NT AUTHORITY') AND
			AuthPackage LIKE '%NtLmSsp%' AND
				Username NOT LIKE '%$'
</QueryData>
    <QueryID>9432e5fd-6a98-4fbe-ba82-45b9c2b49d5b</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-21T07:17:29.9440733-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Security: Unsuccesful logon (group by username)</QueryName>
    <QueryDescription>Security.evtx (EventID 4625)</QueryDescription>
    <QueryData>SELECT COUNT(*) AS CNT,
	EXTRACT_TOKEN(Strings, 5, '|') as Username
FROM '[LOGFILEPATH]'
WHERE EventID = 4625 AND
	Username NOT IN ('SYSTEM'; 'ANONYMOUS LOGON'; 'LOCAL SERVICE'; 'NETWORK SERVICE') AND
		Username NOT LIKE '%$'
GROUP BY Username
ORDER BY CNT DESC
</QueryData>
    <QueryID>c35f0557-9677-4059-871f-004540552ddd</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-21T07:20:53.4349053-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Security: Unsuccesful logon (group by NTLM users)</QueryName>
    <QueryDescription>Security.evtx (EventID 4625)</QueryDescription>
    <QueryData>SELECT COUNT(*) AS CNT,
	EXTRACT_TOKEN(Strings, 5, '|') as Username,
	EXTRACT_TOKEN(Strings, 6, '|') as Domain,
	EXTRACT_TOKEN(Strings, 10, '|') as LogonType,
	EXTRACT_TOKEN(strings, 11, '|') AS AuthPackage,
	EXTRACT_TOKEN(Strings, 13, '|') AS Workstation,
	EXTRACT_TOKEN(Strings, 19, '|') AS SourceIP
FROM '[LOGFILEPATH]'
WHERE EventID = 4625 AND
	Username NOT IN ('SYSTEM'; 'ANONYMOUS LOGON'; 'LOCAL SERVICE'; 'NETWORK SERVICE') AND
		Domain NOT IN ('NT AUTHORITY') AND
			AuthPackage LIKE '%NtLmSsp%' AND
				Username NOT LIKE '%$'
GROUP BY Username, Domain, LogonType, AuthPackage, Workstation, SourceIP
ORDER BY CNT DESC
</QueryData>
    <QueryID>f24c29c6-add7-4cca-8ab6-762eeda47fef</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-21T07:18:59.1931593-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Security: Unsuccesful logon</QueryName>
    <QueryDescription>Security.evtx (EventID 4625)</QueryDescription>
    <QueryData>SELECT TimeGenerated AS Date,
	EXTRACT_TOKEN(Strings, 5, '|') as Username,
	EXTRACT_TOKEN(Strings, 6, '|') as Domain,
       CASE EXTRACT_TOKEN(Strings, 8, '|') WHEN '2' THEN 'Logon via console' ELSE
           CASE EXTRACT_TOKEN(Strings, 8, '|') WHEN '3' THEN 'Network Logon' ELSE
               CASE EXTRACT_TOKEN(Strings, 8, '|') WHEN '4' THEN 'Batch Logon' ELSE
                   CASE EXTRACT_TOKEN(Strings, 8, '|') WHEN '5' THEN 'Windows Service Logon' ELSE
                       CASE EXTRACT_TOKEN(Strings, 8, '|') WHEN '7' THEN 'Credentials used to unlock screen' ELSE
                           CASE EXTRACT_TOKEN(Strings, 8, '|') WHEN '8' THEN 'Network logon sending credentials (cleartext)' ELSE
                               CASE EXTRACT_TOKEN(Strings, 8, '|') WHEN '9' THEN 'Different credentials used than logged on user' ELSE
                                   CASE EXTRACT_TOKEN(Strings, 8, '|') WHEN '10' THEN 'Remote interactive logon (RDP)' ELSE
                                       CASE EXTRACT_TOKEN(Strings, 8, '|') WHEN '11' THEN 'Cached credentials used to logon' ELSE
                                           CASE EXTRACT_TOKEN(Strings, 8, '|') WHEN '12' THEN 'Cached remote interactive (similar to Type 8)' ELSE
                                               CASE EXTRACT_TOKEN(Strings, 8, '|') WHEN '13' THEN 'Cached unlock (similar to Type 7)' ELSE
                                                   EXTRACT_TOKEN(Strings, 8, '|')
                                               END
                                           END
                                       END
                                   END
                               END
                           END
                       END
                   END
               END
           END
       END AS LogonType,
	EXTRACT_TOKEN(strings, 11, '|') AS AuthPackage,
	EXTRACT_TOKEN(Strings, 13, '|') AS Workstation,
	EXTRACT_TOKEN(Strings, 19, '|') AS SourceIP
FROM '[LOGFILEPATH]'
WHERE EventID = 4625 AND
	Username NOT IN ('SYSTEM'; 'ANONYMOUS LOGON'; 'LOCAL SERVICE'; 'NETWORK SERVICE') AND
		Domain NOT IN ('NT AUTHORITY')
</QueryData>
    <QueryID>4d0a985c-1e63-400b-84e6-945c3f0ee412</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2018-02-22T08:51:19.2114327-06:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Security: The Windows Filtering Platform has permitted a bind to a local port</QueryName>
    <QueryDescription>Security.evtx (EventID 5158)</QueryDescription>
    <QueryData>SELECT TimeGenerated as Date,
	extract_token(strings,0,'|') AS ProcessID,
	extract_token(strings,1,'|') AS Application,
	extract_token(strings,2,'|') AS SourceAddress,
	extract_token(strings,3,'|') AS SourcePort,
	extract_token(strings,4,'|') AS Protocol,
	extract_token(strings,5,'|') AS FilterRTID,
	extract_token(strings,6,'|') AS LayerName
FROM '[LOGFILEPATH]'
WHERE EventID = '5158'



</QueryData>
    <QueryID>8766eb78-bb59-437f-87b6-d3c10628b1ef</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T13:01:31.9154694-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Security: The Windows Filtering Platform has blocked a connection</QueryName>
    <QueryDescription>Security.evtx (EventID 5157)</QueryDescription>
    <QueryData>SELECT TimeGenerated as Date,
	extract_token(strings,0,'|') AS ProcessID,
	extract_token(strings,1,'|') AS Application,
	extract_token(strings,2,'|') AS Direction,
	extract_token(strings,3,'|') AS SourceAddress,
	extract_token(strings,4,'|') AS SourcePort,
	extract_token(strings,5,'|') AS DestAddress,
	extract_token(strings,6,'|') AS DestPort,
	extract_token(strings,7,'|') AS Protocol,
	extract_token(strings,8,'|') AS FilterRTID,
	extract_token(strings,9,'|') AS LayerName,
	extract_token(strings,10,'|') AS LayerRTID,
	extract_token(strings,11,'|') AS RemoteUserID,
	extract_token(strings,12,'|') AS RemoteMachineID
FROM '[LOGFILEPATH]'
WHERE EventID = '5157'



</QueryData>
    <QueryID>5e6396ec-483b-47a3-a7b5-14e03b8cb438</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T13:01:44.2274776-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Security: The Windows Filtering Platform has allowed a connection (group by application)</QueryName>
    <QueryDescription>Security.evtx (EventID 5156)</QueryDescription>
    <QueryData>SELECT COUNT(*) AS CNT,
	extract_token(strings,1,'|') AS Application
FROM '[LOGFILEPATH]'
WHERE EventID = '5156'
GROUP BY Application

ORDER BY CNT DESC</QueryData>
    <QueryID>ea4c2e90-5a10-4a67-a2a0-38495cccf3f2</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T13:51:32.0289745-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Security: The Windows Filtering Platform has allowed a connection</QueryName>
    <QueryDescription>Security.evtx (EventID 5156)</QueryDescription>
    <QueryData>SELECT TimeGenerated as Date,
	extract_token(strings,0,'|') AS ProcessID,
	extract_token(strings,1,'|') AS Application,
	extract_token(strings,2,'|') AS Direction,
	extract_token(strings,3,'|') AS SourceAddress,
	extract_token(strings,4,'|') AS SourcePort,
	extract_token(strings,5,'|') AS DestAddress,
	extract_token(strings,6,'|') AS DestPort,
	extract_token(strings,7,'|') AS Protocol,
	extract_token(strings,8,'|') AS FilterRTID,
	extract_token(strings,9,'|') AS LayerName,
	extract_token(strings,10,'|') AS LayerRTID,
	extract_token(strings,11,'|') AS RemoteUserID,
	extract_token(strings,12,'|') AS RemoteMachineID
FROM '[LOGFILEPATH]'
WHERE EventID = '5156'



</QueryData>
    <QueryID>2df87c4c-1c5b-418f-aba6-d957b657a3fb</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T12:52:16.5606528-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Security: Successful logon (RDP)</QueryName>
    <QueryDescription>Security.evtx (EventID 4624)</QueryDescription>
    <QueryData>SELECT TimeGenerated AS Date,
	EXTRACT_TOKEN(Strings, 5, '|') as Username,
	EXTRACT_TOKEN(Strings, 6, '|') as Domain,
	EXTRACT_TOKEN(Strings, 8, '|') as LogonType,
	EXTRACT_TOKEN(strings, 9, '|') AS AuthPackage,
	EXTRACT_TOKEN(Strings, 11, '|') AS Workstation,
	EXTRACT_TOKEN(Strings, 17, '|') AS ProcessName,
	EXTRACT_TOKEN(Strings, 18, '|') AS SourceIP
FROM '[LOGFILEPATH]'
WHERE EventID = 4624 AND
	Username NOT IN ('SYSTEM'; 'ANONYMOUS LOGON'; 'LOCAL SERVICE'; 'NETWORK SERVICE') AND
		Domain NOT IN ('NT AUTHORITY') AND
			LogonType = '10'

</QueryData>
    <QueryID>77a37cf4-c7f1-4511-8dc5-08614239ea53</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T09:14:23.0875246-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Security: Successful logon (NTLM possible pass-the-hash)</QueryName>
    <QueryDescription>Security.evtx (EventID 4624)</QueryDescription>
    <QueryData>SELECT TimeGenerated AS Date,
	EXTRACT_TOKEN(Strings, 5, '|') as Username,
	EXTRACT_TOKEN(Strings, 6, '|') as Domain,
	EXTRACT_TOKEN(Strings, 8, '|') as LogonType,
	EXTRACT_TOKEN(strings, 9, '|') AS AuthPackage,
	EXTRACT_TOKEN(Strings, 11, '|') AS Workstation,
	EXTRACT_TOKEN(Strings, 17, '|') AS ProcessName,
	EXTRACT_TOKEN(Strings, 18, '|') AS SourceIP
FROM '[LOGFILEPATH]'
WHERE EventID = 4624 AND
	Username NOT IN ('SYSTEM'; 'ANONYMOUS LOGON'; 'LOCAL SERVICE'; 'NETWORK SERVICE') AND
		Domain NOT IN ('NT AUTHORITY') AND
			AuthPackage LIKE '%NtLmSsp%' AND 
				Username NOT LIKE '%$'

</QueryData>
    <QueryID>8b3ec111-ccb6-4602-ac53-c6b0ce2baf63</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T09:19:33.1951032-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Security: Successful logon (group by Workstation)</QueryName>
    <QueryDescription>Security.evtx (EventID 4624)</QueryDescription>
    <QueryData>SELECT COUNT(*) AS CNT,
	EXTRACT_TOKEN(Strings, 11, '|') as Workstation
FROM '[LOGFILEPATH]'
WHERE EventID = 4624
GROUP BY Workstation
ORDER BY CNT DESC

</QueryData>
    <QueryID>c7fecd80-5f11-4dec-b80a-63967b4dc5f9</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T09:29:52.4898156-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Security: Successful logon (group by users)</QueryName>
    <QueryDescription>Security.evtx (EventID 4624)</QueryDescription>
    <QueryData>SELECT COUNT(*) AS CNT,
	EXTRACT_TOKEN(Strings, 5, '|') as Username
FROM '[LOGFILEPATH]'
WHERE EventID = 4624 AND
	Username NOT IN ('SYSTEM'; 'ANONYMOUS LOGON'; 'LOCAL SERVICE'; 'NETWORK SERVICE') AND
		Username NOT LIKE '%$'
GROUP BY Username
ORDER BY CNT DESC

</QueryData>
    <QueryID>ea7138bf-e2c5-40f3-81cb-3c899759cfba</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T09:26:08.6205448-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Security: Successful logon (group by ProcName)</QueryName>
    <QueryDescription>Security.evtx (EventID 4624)</QueryDescription>
    <QueryData>SELECT COUNT(*) AS CNT,
	EXTRACT_TOKEN(Strings, 17, '|') as ProcName
FROM '[LOGFILEPATH]'
WHERE EventID = 4624
GROUP BY ProcName
ORDER BY CNT DESC

</QueryData>
    <QueryID>84c9b715-5429-4850-8196-8ee114d4bf7d</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T09:30:38.9209203-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Security: Successful logon (group by NTLM users)</QueryName>
    <QueryDescription>Security.evtx (EventID 4624)</QueryDescription>
    <QueryData>SELECT COUNT(*) AS CNT,
	EXTRACT_TOKEN(Strings, 5, '|') as Username,
	EXTRACT_TOKEN(Strings, 6, '|') as Domain,
       CASE EXTRACT_TOKEN(Strings, 8, '|') WHEN '2' THEN 'Logon via console' ELSE
           CASE EXTRACT_TOKEN(Strings, 8, '|') WHEN '3' THEN 'Network Logon' ELSE
               CASE EXTRACT_TOKEN(Strings, 8, '|') WHEN '4' THEN 'Batch Logon' ELSE
                   CASE EXTRACT_TOKEN(Strings, 8, '|') WHEN '5' THEN 'Windows Service Logon' ELSE
                       CASE EXTRACT_TOKEN(Strings, 8, '|') WHEN '7' THEN 'Credentials used to unlock screen' ELSE
                           CASE EXTRACT_TOKEN(Strings, 8, '|') WHEN '8' THEN 'Network logon sending credentials (cleartext)' ELSE
                               CASE EXTRACT_TOKEN(Strings, 8, '|') WHEN '9' THEN 'Different credentials used than logged on user' ELSE
                                   CASE EXTRACT_TOKEN(Strings, 8, '|') WHEN '10' THEN 'Remote interactive logon (RDP)' ELSE
                                       CASE EXTRACT_TOKEN(Strings, 8, '|') WHEN '11' THEN 'Cached credentials used to logon' ELSE
                                           CASE EXTRACT_TOKEN(Strings, 8, '|') WHEN '12' THEN 'Cached remote interactive (similar to Type 8)' ELSE
                                               CASE EXTRACT_TOKEN(Strings, 8, '|') WHEN '13' THEN 'Cached unlock (similar to Type 7)' ELSE
                                                   EXTRACT_TOKEN(Strings, 8, '|')
                                               END
                                           END
                                       END
                                   END
                               END
                           END
                       END
                   END
               END
           END
       END AS LogonType,
	EXTRACT_TOKEN(strings, 9, '|') AS AuthPackage,
	EXTRACT_TOKEN(Strings, 11, '|') AS Workstation,
	EXTRACT_TOKEN(Strings, 17, '|') AS ProcessName,
	EXTRACT_TOKEN(Strings, 18, '|') AS SourceIP
FROM '[LOGFILEPATH]'
WHERE EventID = 4624 AND
	Username NOT IN ('SYSTEM'; 'ANONYMOUS LOGON'; 'LOCAL SERVICE'; 'NETWORK SERVICE') AND
		Domain NOT IN ('NT AUTHORITY') AND
			AuthPackage LIKE '%NtLmSsp%' AND 
				Username NOT LIKE '%$'
GROUP BY Username, Domain, LogonType, AuthPackage, Workstation, ProcessName, SourceIP
ORDER BY CNT DESC

</QueryData>
    <QueryID>f813071a-33e5-4246-b6da-d17fd65dda67</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2018-02-22T08:50:12.7292507-06:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Security: Successful logon (group by LogonType)</QueryName>
    <QueryDescription>Security.evtx (EventID 4624)</QueryDescription>
    <QueryData>SELECT COUNT(*) AS CNT,
	EXTRACT_TOKEN(Strings, 8, '|') as LogonType
FROM '[LOGFILEPATH]'
WHERE EventID = 4624
GROUP BY LogonType
ORDER BY CNT DESC

</QueryData>
    <QueryID>44fd88ef-920f-4f3c-b03a-58e6ae6efcac</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T09:29:08.1927783-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Security: Successful logon (group by domain)</QueryName>
    <QueryDescription>Security.evtx (EventID 4624)</QueryDescription>
    <QueryData>SELECT COUNT(*) AS CNT,
	EXTRACT_TOKEN(Strings, 6, '|') as Domain
FROM '[LOGFILEPATH]'
WHERE EventID = 4624
GROUP BY Domain
ORDER BY CNT DESC

</QueryData>
    <QueryID>d3d9cf3e-e0c0-4ff5-ae6f-2c15498f3693</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T09:27:18.5703094-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Security: Successful logon (group by authpackage)</QueryName>
    <QueryDescription>Security.evtx (EventID 4624)</QueryDescription>
    <QueryData>SELECT COUNT(*) AS CNT,
	EXTRACT_TOKEN(Strings, 9, '|') as AuthPackage
FROM '[LOGFILEPATH]'
WHERE EventID = 4624
GROUP BY AuthPackage
ORDER BY CNT DESC

</QueryData>
    <QueryID>38221e43-70c6-4031-b2f9-bd84465d9965</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T09:28:10.3056625-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Security: Successful logon (console)</QueryName>
    <QueryDescription>Security.evtx (EventID 4624)</QueryDescription>
    <QueryData>SELECT TimeGenerated AS Date,
	EXTRACT_TOKEN(Strings, 5, '|') as Username,
	EXTRACT_TOKEN(Strings, 6, '|') as Domain,
	EXTRACT_TOKEN(Strings, 8, '|') as LogonType,
	EXTRACT_TOKEN(strings, 9, '|') AS AuthPackage,
	EXTRACT_TOKEN(Strings, 11, '|') AS Workstation,
	EXTRACT_TOKEN(Strings, 17, '|') AS ProcessName,
	EXTRACT_TOKEN(Strings, 18, '|') AS SourceIP
FROM '[LOGFILEPATH]'
WHERE EventID = 4624 AND
	Username NOT IN ('SYSTEM'; 'ANONYMOUS LOGON'; 'LOCAL SERVICE'; 'NETWORK SERVICE') AND
		Domain NOT IN ('NT AUTHORITY') AND
			LogonType = '2'

</QueryData>
    <QueryID>a3c4f4e4-2a90-44a0-b72d-a568fbeb929c</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T09:15:38.3591261-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Security: Successful logon</QueryName>
    <QueryDescription>Security.evtx (EventID 4624)</QueryDescription>
    <QueryData>SELECT TimeGenerated AS Date,
	EXTRACT_TOKEN(Strings, 5, '|') as Username,
	EXTRACT_TOKEN(Strings, 6, '|') as Domain,
       CASE EXTRACT_TOKEN(Strings, 8, '|') WHEN '2' THEN 'Logon via console' ELSE
           CASE EXTRACT_TOKEN(Strings, 8, '|') WHEN '3' THEN 'Network Logon' ELSE
               CASE EXTRACT_TOKEN(Strings, 8, '|') WHEN '4' THEN 'Batch Logon' ELSE
                   CASE EXTRACT_TOKEN(Strings, 8, '|') WHEN '5' THEN 'Windows Service Logon' ELSE
                       CASE EXTRACT_TOKEN(Strings, 8, '|') WHEN '7' THEN 'Credentials used to unlock screen' ELSE
                           CASE EXTRACT_TOKEN(Strings, 8, '|') WHEN '8' THEN 'Network logon sending credentials (cleartext)' ELSE
                               CASE EXTRACT_TOKEN(Strings, 8, '|') WHEN '9' THEN 'Different credentials used than logged on user' ELSE
                                   CASE EXTRACT_TOKEN(Strings, 8, '|') WHEN '10' THEN 'Remote interactive logon (RDP)' ELSE
                                       CASE EXTRACT_TOKEN(Strings, 8, '|') WHEN '11' THEN 'Cached credentials used to logon' ELSE
                                           CASE EXTRACT_TOKEN(Strings, 8, '|') WHEN '12' THEN 'Cached remote interactive (similar to Type 10)' ELSE
                                               CASE EXTRACT_TOKEN(Strings, 8, '|') WHEN '13' THEN 'Cached unlock (similar to Type 7)' ELSE
                                                   EXTRACT_TOKEN(Strings, 8, '|')
                                               END
                                           END
                                       END
                                   END
                               END
                           END
                       END
                   END
               END
           END
       END AS LogonType,
	EXTRACT_TOKEN(strings, 9, '|') AS AuthPackage,
	EXTRACT_TOKEN(Strings, 11, '|') AS Workstation,
	EXTRACT_TOKEN(Strings, 17, '|') AS ProcessName,
	EXTRACT_TOKEN(Strings, 18, '|') AS SourceIP
FROM '[LOGFILEPATH]'
WHERE EventID = 4624 AND
	Username NOT IN ('SYSTEM'; 'ANONYMOUS LOGON'; 'LOCAL SERVICE'; 'NETWORK SERVICE') AND
		Domain NOT IN ('NT AUTHORITY')
</QueryData>
    <QueryID>ed8fa8d2-ec94-4853-a6a3-9e2c6ab0f9da</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2018-07-11T11:42:51.1368302-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Security: New process was created terminated</QueryName>
    <QueryDescription>Security.evtx (EventID 4688,4689)</QueryDescription>
    <QueryData>SELECT TimeGenerated AS Date,EventID,
	EXTRACT_TOKEN(Strings, 1, '|') AS Username,
	EXTRACT_TOKEN(Strings, 2, '|') AS Domain,
       HEX_TO_INT(EXTRACT_TOKEN(Strings, 4, '|')) AS PID,
	EXTRACT_TOKEN(Strings, 5, '|') AS Process,
       HEX_TO_INT(EXTRACT_TOKEN(Strings, 7, '|')) AS PPID,
	EXTRACT_TOKEN(Strings, 13, '|') AS ParentProcess,
       EXTRACT_TOKEN(Strings, 8, '|') AS CommandLine
FROM '[LOGFILEPATH]'
WHERE EventID in (4688;4689)
ORDER BY Date,PPID,PID


</QueryData>
    <QueryID>7c8f9512-0e17-40c4-993c-56ce4ed0f4ed</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2018-02-08T07:54:29.9412921-06:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Security: New process was created (group by username)</QueryName>
    <QueryDescription>Security.evtx (EventID 4688)</QueryDescription>
    <QueryData>SELECT COUNT(*) AS CNT,
	EXTRACT_TOKEN(Strings, 1, '|') AS Username
FROM '[LOGFILEPATH]'
WHERE EventID = 4688
GROUP BY Username
ORDER BY CNT DESC


</QueryData>
    <QueryID>3a6c03a9-a2c0-41bb-a7f5-e804ca5a4e1f</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T09:49:13.9706327-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Security: New process was created (group by Process)</QueryName>
    <QueryDescription>Security.evtx (EventID 4688)</QueryDescription>
    <QueryData>SELECT COUNT(*) AS CNT,
	EXTRACT_TOKEN(Strings, 5, '|') AS Process
FROM '[LOGFILEPATH]'
WHERE EventID = 4688
GROUP BY Process
ORDER BY CNT DESC


</QueryData>
    <QueryID>69879b27-6efb-4253-8907-f2abde087f66</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T09:49:57.7948363-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Security: New process was created (group by ParentProcess)</QueryName>
    <QueryDescription>Security.evtx (EventID 4688)</QueryDescription>
    <QueryData>SELECT COUNT(*) AS CNT,
	EXTRACT_TOKEN(Strings, 13, '|') AS ParentProcess
FROM '[LOGFILEPATH]'
WHERE EventID = 4688
GROUP BY ParentProcess
ORDER BY CNT DESC


</QueryData>
    <QueryID>8bd878a9-a5b2-413d-ab7c-6a5a5b340c1f</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T14:11:15.8225487-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Security: New process was created</QueryName>
    <QueryDescription>Security.evtx (EventID 4688)</QueryDescription>
    <QueryData>SELECT TimeGenerated AS Date,
	EXTRACT_TOKEN(Strings, 1, '|') AS Username,
	EXTRACT_TOKEN(Strings, 2, '|') AS Domain,
	EXTRACT_TOKEN(Strings, 5, '|') AS Process,
	EXTRACT_TOKEN(Strings, 13, '|') AS ParentProcess
FROM '[LOGFILEPATH]'
WHERE EventID = 4688


</QueryData>
    <QueryID>e80042a3-1018-4ca7-9589-08f489106dfa</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T14:11:28.2390083-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Security: New exception eas added to firewall (group by rulename)</QueryName>
    <QueryDescription>Security.evtx (EventID 4946)</QueryDescription>
    <QueryData>SELECT Count(*) as CNT,
	extract_token(strings, 2, '|') as rulename
FROM '[LOGFILEPATH]'
WHERE EventID = 4946
GROUP BY rulename
ORDER BY CNT DESC
</QueryData>
    <QueryID>5834bef7-a59e-47a9-b5e8-c84138a49531</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-21T07:29:04.5441962-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Security: New exception eas added to firewall</QueryName>
    <QueryDescription>Security.evtx (EventID 4946)</QueryDescription>
    <QueryData>SELECT TimeGenerated AS Date,
	extract_token(strings, 2, '|') as rulename
FROM '[LOGFILEPATH]'
WHERE EventID = 4946
</QueryData>
    <QueryID>bcedd0eb-75a2-48b5-9e37-32a20a535d14</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-21T07:27:47.3055877-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Security: Eventlog was cleared</QueryName>
    <QueryDescription>Security.evtx (EventID 1102)</QueryDescription>
    <QueryData>SELECT TimeGenerated AS Date,
	EXTRACT_TOKEN(Strings, 1, '|') as Username,
	EXTRACT_TOKEN(Strings, 2, '|') AS Workstation
FROM '[LOGFILEPATH]'
WHERE EventID = '1102'</QueryData>
    <QueryID>52047896-3447-46b0-bc7f-89b48ca37f92</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:31:23.1664225-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Security: An attempt was made to access an object</QueryName>
    <QueryDescription>Security.evtx (EventID 4663)</QueryDescription>
    <QueryData>SELECT TimeGenerated as Date,
	extract_token(strings,0,'|') AS UserSid,
	extract_token(strings,1,'|') AS UserName,
	extract_token(strings,2,'|') AS DomainName,
	extract_token(strings,3,'|') AS LogonID,
	extract_token(strings,4,'|') AS Server,
	extract_token(strings,5,'|') AS Type,
	extract_token(strings,6,'|') AS ObjectName,
	extract_token(strings,7,'|') AS HandleID,
	replace_str(
           replace_str(
               replace_str(
                   replace_str(
                       replace_str(
                           replace_str(
                               replace_str(
                                   replace_str(
                                       replace_str(
                                           replace_str(
                                               replace_str(
                                                   replace_str(
                                                       replace_str(
                                                           replace_str(
                                                               replace_str(
                                                                   replace_str(
                                                                       replace_str(
                                                                           replace_str(
                                                                               replace_str(
                                                                                   replace_str(
                                                                                       replace_str(
                                                                                           replace_str(
                                                                                               replace_str(
                                                                                                   replace_str(extract_token(strings,8,'|'),
                                                                                                   '%%1537', 'Delete, '),
                                                                                               '%%1538','READ_CONTROL, '),
                                                                                           '%%1539','WRITE_DAC, '),
                                                                                       '%%1540','WRITE_OWNER, '),
                                                                                   '%%1541','SYNCRONIZE'),
                                                                               '%%1542','ACCESS_SYS_SEC, '),
                                                                           '%%4416','ReadData, '),
                                                                       '%%4417','WriteData, '),
                                                                   '%%4418','AppendData, '),
                                                               '%%4419','ReadEA, '),
                                                           '%%4420','WriteEA, '),
                                                       '%4422','DeleteChild'),
                                                   '%%4421','Execute/Traverse, '),
                                               '%%4423','ReadAttributes, '),
                                           '%%4424','WriteAttributes, '),
                                       '%%4432','Query Key Value, '),
                                   '%%4433','Set Key Value, '),
                               '%%4434','Create Sub Key, '),
                           '%%4435','Enumerate sub-keys, '),
                       '%%4436','Noitfy about changes to keys, '),
                   '%%4437','Create Link, '),
               '\u0009',''),
           '\u000d',''),
       '\u0010','') AS Access,
	extract_token(strings,9,'|') AS AccessMask,
	HEX_TO_INT(extract_token(strings,10,'|')) AS ProcessID,
	extract_token(strings,11,'|') AS ProcessName,
	extract_token(strings,12,'|') AS ResourceAttributes
FROM '[LOGFILEPATH]' 
WHERE EventID = 4663</QueryData>
    <QueryID>a01f8b3d-8408-4d8a-8c89-da37b97f26f8</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2018-10-08T14:27:32.785355-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Security: A registry value was modified</QueryName>
    <QueryDescription>Security.evtx (EventID 4657)</QueryDescription>
    <QueryData>SELECT *
FROM '[LOGFILEPATH]'
WHERE EventID = 4657


</QueryData>
    <QueryID>615f45dc-b0ba-4963-8f69-0bb11236d71d</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T09:38:03.9444095-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Report: Suspicious Commands/Procs associated with possible Recon</QueryName>
    <QueryDescription>List of “recon” strings to identify clusters of commands which are more likely to be indicative of an adversary performing recon on the machine or network in search of additional opportunities..</QueryDescription>
    <QueryData>SELECT TimeGenerated AS Date, 
     EXTRACT_TOKEN(Strings, 1, '|') AS Username,
     EXTRACT_TOKEN(Strings, 2, '|') AS Domain,
     EXTRACT_TOKEN(Strings, 5, '|') AS Process 
FROM '[LOGFILEPATH]'
WHERE EventID = 4688 AND (Process LIKE '%\\at.exe'  OR Process LIKE '%\\ceipdata.exe'  OR Process LIKE '%\\ceiprole.exe'  OR  Process LIKE '%\\chcp.exe' OR Process LIKE '%\\cmd.exe'  OR Process LIKE '%\\compmgmtlauncher.exe'  OR Process LIKE '%\\csvde.exe'  OR Process LIKE '%\\dsget.exe' OR Process LIKE '%\\dsquery.exe'  OR Process LIKE '%\\esentutl.exe'  OR Process LIKE '%\\\\find.exe'  OR Process LIKE '%\\fsutil.exe'  OR Process LIKE '%\\hostname.exe'  OR Process LIKE '%\\ipconfig.exe'  OR Process LIKE '%\\ldifde.exe'  OR Process LIKE '%\\nbtstat.exe'  OR Process LIKE '%\\net.exe'  OR Process LIKE '%\\net1.exe'  OR Process LIKE '%\\netdom.exe' OR Process LIKE '%\\netsh.exe' OR Process LIKE '%\\netstat.exe' OR Process LIKE '%\\nltest.exe' OR Process LIKE '%\\nslookup.exe' OR Process LIKE '%\\ping.exe' OR Process LIKE '%\\psexec.exe' OR Process LIKE '%\\qprocess.exe' OR Process LIKE '%\\query.exe' OR Process LIKE '%\\quser.exe' OR Process LIKE '%\\qwinsta.exe' OR Process LIKE '%\\reg.exe'  OR Process LIKE '%\\sc.exe' OR Process LIKE '%\\schtasks.exe' OR Process LIKE '%\\servermanagercmd.exe' OR Process LIKE '%\\set.exe' OR Process LIKE '%\\systeminfo.exe' OR Process LIKE '%\\tasklist.exe' OR Process LIKE '%\\time.exe' OR Process LIKE '%\\tracert.exe'  OR Process LIKE '%\\tree.exe' OR Process LIKE '%\\type.exe' OR Process LIKE '%\\vds.exe' OR Process LIKE '%\\vdsldr.exe' OR Process LIKE '%\\ver.exe' OR Process LIKE '%\\wevtutil.exe' OR Process LIKE '%\\whoami.exe' OR Process LIKE '%\\WinrsHost.exe' OR Process LIKE '%\\inver.exe' OR Process LIKE '%\\wmic.exe' OR Process LIKE '%\\wusa.exe') AND NOT Process LIKE '%\\dsregcmd.exe'</QueryData>
    <QueryID>1c4cedbb-d49a-498c-9adb-c78f3a3a4be7</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>ALL</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2019-02-14T09:48:23.9482537-06:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Report: Summary of Process Execution</QueryName>
    <QueryDescription>Gathers 4688 events and groups them by process</QueryDescription>
    <QueryData>SELECT COUNT(*) AS CNT,
     EXTRACT_TOKEN(Strings, 5, '|') AS Process, 
     extract_token(strings, 13, '|') as ParentProcess
FROM '[LOGFILEPATH]'
WHERE EventID = 4688 AND (Process LIKE '%.%' AND ParentProcess LIKE '%.%')
GROUP BY Process, ParentProcess
ORDER BY CNT ASC</QueryData>
    <QueryID>6586daac-1fa0-44b2-918c-99cc310284db</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>ALL</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2019-02-14T09:42:34.3081581-06:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Report: RDP Usage</QueryName>
    <QueryDescription>Microsoft-Windows-TerminalServices-LocalSessionManager%4Operational 21,22,23,24,25,39,40 and Microsoft-Windows-TerminalServices-RemoteConnectionManager%4Operational 1149</QueryDescription>
    <QueryData>Select timegenerated as Date, EventID,
	CASE EventID WHEN 1149 THEN STRCAT(EXTRACT_TOKEN(strings, 1, '|'),STRCAT('\\',EXTRACT_TOKEN(strings, 0, '|')))
           WHEN 39 THEN ''
               WHEN 40 THEN '' ELSE
                   EXTRACT_TOKEN(strings, 0, '|')
       END as User,
       CASE EventID WHEN 21 THEN 'Session logon succeeded'
           WHEN 22 THEN 'Shell start notification received'
               WHEN 23 THEN 'Session logoff succeeded'
                   WHEN 24 THEN 'Session has been disconnected'
                       WHEN 25 THEN 'Session reconnection succeeded'
                           WHEN 39 THEN STRCAT('Session ',STRCAT(EXTRACT_TOKEN(strings, 0, '|'),STRCAT(' has been disconnected by session ',EXTRACT_TOKEN(strings, 1, '|'))))
                               WHEN 40 THEN STRCAT('Session ',STRCAT(EXTRACT_TOKEN(strings, 0, '|'),' has been disconnected'))
                               WHEN 1149 THEN 'User authentication succeeded'
       END as Description,
       CASE EventID WHEN 1149 THEN ''
           WHEN 39 THEN EXTRACT_TOKEN(strings, 0, '|')
               WHEN 40 THEN EXTRACT_TOKEN(strings, 0, '|') ELSE
                   EXTRACT_TOKEN(strings, 1, '|')
       END as SessionID,
       CASE EventID WHEN 39 THEN EXTRACT_TOKEN(strings, 1, '|') END AS SourceSessionID,
       CASE EventID WHEN 40 THEN 
           CASE EXTRACT_TOKEN(strings, 1, '|') WHEN '0' THEN 'No additional information is available' 
               WHEN '1' THEN 'An application initiated the disconnection'
                   WHEN '2' THEN 'An application logged off the client'
                       WHEN '3' THEN 'The server has disconnected the client because the client has been idle for a period of time longer than the designated time-out period'
                           WHEN '4' THEN 'The server has disconnected the client because the client has exceeded the period designated for connection'
                               WHEN '5' THEN 'The clients connection was replaced by another connection'
                                   WHEN '6' THEN 'No memory is available'
                                       WHEN '7' THEN 'The server denied the connection'
                                           WHEN '8' THEN 'The server denied the connection for security reasons'
                                               WHEN '9' THEN 'The server denied the connection for security reasons'
                                                   WHEN '10' THEN 'Fresh credentials are required'
                                                       WHEN '11' THEN 'User activity has initiated the disconnect'
                                                           WHEN '12' THEN 'The user logged off, disconnecting the session'
                                                               WHEN '256' THEN 'Internal licensing error'
                                                                   WHEN '257' THEN 'No license server was available'
                                                                       WHEN '258' THEN 'No valid software license was available'
                                                                           WHEN '259' THEN 'The remote computer received a licensing message that was not valid'
                                                                               WHEN '260' THEN 'The hardware ID does not match the one designated on the software license'
                                                                                   WHEN '261' THEN 'Client license error'
                                                                                       WHEN '262' THEN 'Network problems occurred during the licensing protocol'
                                                                                           WHEN '263' THEN 'The client ended the licensing protocol prematurely'
                                                                                               WHEN '264' THEN 'A licensing message was encrypted incorrectly'
                                                                                                   WHEN '265' THEN 'The local computers client access license could not be upgraded or renewed'
                                                                                                       WHEN '266' THEN 'The remote computer is not licensed to accept remote connections'
                                                                                                           WHEN '267' THEN 'An access denied error was received while creating a registry key for the license store'
                                                                                                               WHEN '768' THEN 'Invalid credentials were encountered'
               ELSE EXTRACT_TOKEN(strings, 1, '|') END END as ReasonCode,
	EXTRACT_TOKEN(strings, 2, '|') as SourceIP
FROM '[LOGFILEPATH]'
WHERE (SourceName = 'Microsoft-Windows-TerminalServices-LocalSessionManager' AND (EventID = 21 or EventID = 22 or EventID = 23 or EventID = 24 or EventID = 25 or EventID = 39 or EventID = 40)) OR (SourceName = 'Microsoft-Windows-TerminalServices-RemoteConnectionManager' AND EventID = 1149)
</QueryData>
    <QueryID>e8f52f31-54e2-4ef6-a84b-901c30f9f172</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2019-02-26T13:38:12.07074-06:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Report: Logon, Logoff</QueryName>
    <QueryDescription>Security events 4624,4625,4634,4647,4648,4778,4779</QueryDescription>
    <QueryData>SELECT TimeGenerated AS Date, EventID,
       CASE EventID WHEN 4624 THEN 'An account was successfully logged on'
           WHEN 4625 THEN 'An account failed to log on'           
               WHEN 4634 THEN 'An account was logged off'
                   WHEN 4647 THEN 'User initiated logoff'
                       WHEN 4648 THEN 'A logon was attempted using explicit credentials'
                           WHEN 4672 THEN 'Special privileges assigned to new logon'
                               WHEN 4778 THEN 'A session was reconnected to a Window Station'
                                   WHEN 4779 THEN 'A session was disconnected from a Window Station'
                                       WHEN 4800 THEN 'The workstation was locked'
                                           WHEN 4801 THEN 'The workstation was unlocked'
                                               WHEN 4802 THEN 'The screen saver was invoked'
                                                   WHEN 4803 THEN 'The screen saver was dismissed'
       END as Description,
	CASE EventID WHEN 4624 THEN EXTRACT_TOKEN(Strings, 5, '|')
           WHEN 4625 THEN EXTRACT_TOKEN(Strings, 5, '|')           
               WHEN 4634 THEN EXTRACT_TOKEN(Strings, 1, '|')
                   WHEN 4647 THEN EXTRACT_TOKEN(Strings, 1, '|')
                       WHEN 4648 THEN EXTRACT_TOKEN(Strings, 1, '|')
                           WHEN 4672 THEN EXTRACT_TOKEN(Strings, 1, '|')
                               WHEN 4778 THEN EXTRACT_TOKEN(Strings, 0, '|')
                                   WHEN 4779 THEN EXTRACT_TOKEN(Strings, 0, '|')
                                       WHEN 4800 THEN EXTRACT_TOKEN(Strings, 1, '|')
                                           WHEN 4801 THEN EXTRACT_TOKEN(Strings, 1, '|')
                                               WHEN 4802 THEN EXTRACT_TOKEN(Strings, 1, '|')
                                                   WHEN 4803 THEN EXTRACT_TOKEN(Strings, 1, '|')
       END as Username,
	CASE EventID WHEN 4624 THEN EXTRACT_TOKEN(Strings, 6, '|')
           WHEN 4625 THEN EXTRACT_TOKEN(Strings, 6, '|')
               WHEN 4634 THEN EXTRACT_TOKEN(Strings, 2, '|')
                   WHEN 4647 THEN EXTRACT_TOKEN(Strings, 2, '|')
                       WHEN 4648 THEN EXTRACT_TOKEN(Strings, 2, '|')
                           WHEN 4672 THEN EXTRACT_TOKEN(Strings, 2, '|')
                               WHEN 4778 THEN EXTRACT_TOKEN(Strings, 1, '|')
                                   WHEN 4779 THEN EXTRACT_TOKEN(Strings, 1, '|')
                                       WHEN 4800 THEN EXTRACT_TOKEN(Strings, 2, '|')
                                           WHEN 4801 THEN EXTRACT_TOKEN(Strings, 2, '|')
                                               WHEN 4802 THEN EXTRACT_TOKEN(Strings, 2, '|')
                                                   WHEN 4803 THEN EXTRACT_TOKEN(Strings, 2, '|')
       END as Domain,
       CASE EventID WHEN 4648 THEN STRCAT(EXTRACT_TOKEN(Strings, 6, '|'),STRCAT('\\',EXTRACT_TOKEN(Strings, 5, '|'))) END AS CredentialsUsed,
       CASE EventID WHEN 4624 THEN EXTRACT_TOKEN(Strings, 7, '|')
           WHEN 4624 THEN EXTRACT_TOKEN(Strings, 7, '|')
               WHEN 4634 THEN EXTRACT_TOKEN(Strings, 3, '|')
                   WHEN 4647 THEN EXTRACT_TOKEN(Strings, 3, '|')
                       WHEN 4648 THEN EXTRACT_TOKEN(Strings, 3, '|')
                           WHEN 4672 THEN EXTRACT_TOKEN(Strings, 3, '|')
                               WHEN 4778 THEN EXTRACT_TOKEN(Strings, 2, '|')
                                   WHEN 4779 THEN EXTRACT_TOKEN(Strings, 2, '|')
                                       WHEN 4800 THEN EXTRACT_TOKEN(Strings, 3, '|')
                                           WHEN 4801 THEN EXTRACT_TOKEN(Strings, 3, '|')
                                               WHEN 4802 THEN EXTRACT_TOKEN(Strings, 3, '|')
                                                   WHEN 4803 THEN EXTRACT_TOKEN(Strings, 3, '|')
       END AS LogonID,
       CASE EventID WHEN 4778 THEN EXTRACT_TOKEN(Strings, 3, '|') 
           WHEN 4779 THEN EXTRACT_TOKEN(Strings, 3, '|')
               WHEN 4800 THEN EXTRACT_TOKEN(Strings, 4, '|')
                   WHEN 4801 THEN EXTRACT_TOKEN(Strings, 4, '|')
                       WHEN 4802 THEN EXTRACT_TOKEN(Strings, 4, '|')
                           WHEN 4803 THEN EXTRACT_TOKEN(Strings, 4, '|')
       END AS SessionName,
       REPLACE_STR(REPLACE_STR(REPLACE_STR(REPLACE_STR(REPLACE_STR(REPLACE_STR(REPLACE_STR(REPLACE_STR(REPLACE_STR(REPLACE_STR(REPLACE_STR(CASE EventID WHEN 4624 THEN EXTRACT_TOKEN(Strings, 8, '|')
           WHEN 4625 THEN EXTRACT_TOKEN(Strings, 10, '|')
               WHEN 4634 THEN EXTRACT_TOKEN(Strings, 4, '|')
       END,'2','Logon via console'),'3','Network Logon'),'4','Batch Logon'),'5','Windows Service Logon'),'7','Credentials used to unlock screen'),'8','Network logon sending credentials (cleartext)'),'9','Different credentials used than logged on user'),'10','Remote interactive logon (RDP)'),'11','Cached credentials used to logon'),'12','Cached remote interactive (similar to Type 10)'),'13','Cached unlock (similar to Type 7)') AS LogonType,
       CASE EventID WHEN 4625 THEN 
           CASE EXTRACT_TOKEN(strings, 7, '|') WHEN '0xc000005e' THEN 'There are currently no logon servers available to service the logon request'
               WHEN '0xc0000064' THEN 'user name does not exist'
                   WHEN '0xc000006a' THEN 'user name is correct but the password is wrong'
                       WHEN '0xc000006d' THEN 'user logon with misspelled or bad password'
                           WHEN '0xc000006e' THEN 'unknown user name or bad password'
                               WHEN '0xc000006f' THEN 'user tried to logon outside his day of week or time of day restrictions'
                                   WHEN '0xc0000070' THEN 'workstation restriction, or Authentication Policy Silo violation (look for event ID 4820 on domain controller)'
                                       WHEN '0xc0000071' THEN 'expired password'
                                           WHEN '0xc0000072' THEN 'account is currently disabled'
                                               WHEN '0xc00000dc' THEN 'Indicates the Sam Server was in the wrong state to perform the desired operation.'
                                                   WHEN '0xc0000133' THEN 'clocks between DC and other computer too far out of sync'
                                                       WHEN '0xc000015b' THEN 'The user has not been granted the requested logon type (aka logon right) at this machine'
                                                           WHEN '0xc000018c' THEN 'The logon request failed because the trust relationship between the primary domain and the trusted domain failed'
                                                               WHEN '0xc0000192' THEN 'An attempt was made to logon, but the netlogon service was not started'
                                                                   WHEN '0xc0000193' THEN 'account expiration'
                                                                       WHEN '0xc0000224' THEN 'user is required to change password at next logon'
                                                                           WHEN '0xc0000225' THEN 'evidently a bug in Windows and not a risk'
                                                                               WHEN '0xc0000234' THEN 'user is currently locked out'
                                                                                   WHEN '0xc00002ee' THEN 'Failure Reason: An Error occurred during Logon'                                                                               
                                                                                       WHEN '0xc0000413' THEN 'Logon Failure: The machine you are logging onto is protected by an authentication firewall. The specified account is not allowed to authenticate to the machine' ELSE
                                                                                           EXTRACT_TOKEN(strings, 7, '|')
       END END AS Status,
       CASE EventID WHEN 4625 THEN 
           CASE EXTRACT_TOKEN(strings, 9, '|') WHEN '0xc000005e' THEN 'There are currently no logon servers available to service the logon request'
               WHEN '0xc0000064' THEN 'user name does not exist'
                   WHEN '0xc000006a' THEN 'user name is correct but the password is wrong'
                       WHEN '0xc000006d' THEN 'user logon with misspelled or bad password'
                           WHEN '0xc000006e' THEN 'unknown user name or bad password'
                               WHEN '0xc000006f' THEN 'user tried to logon outside his day of week or time of day restrictions'
                                   WHEN '0xc0000070' THEN 'workstation restriction, or Authentication Policy Silo violation (look for event ID 4820 on domain controller)'
                                       WHEN '0xc0000071' THEN 'expired password'
                                           WHEN '0xc0000072' THEN 'account is currently disabled'
                                               WHEN '0xc00000dc' THEN 'Indicates the Sam Server was in the wrong state to perform the desired operation.'
                                                   WHEN '0xc0000133' THEN 'clocks between DC and other computer too far out of sync'
                                                       WHEN '0xc000015b' THEN 'The user has not been granted the requested logon type (aka logon right) at this machine'
                                                           WHEN '0xc000018c' THEN 'The logon request failed because the trust relationship between the primary domain and the trusted domain failed'
                                                               WHEN '0xc0000192' THEN 'An attempt was made to logon, but the netlogon service was not started'
                                                                   WHEN '0xc0000193' THEN 'account expiration'
                                                                       WHEN '0xc0000224' THEN 'user is required to change password at next logon'
                                                                           WHEN '0xc0000225' THEN 'evidently a bug in Windows and not a risk'
                                                                               WHEN '0xc0000234' THEN 'user is currently locked out'
                                                                                   WHEN '0xc00002ee' THEN 'Failure Reason: An Error occurred during Logon'                                                                               
                                                                                       WHEN '0xc0000413' THEN 'Logon Failure: The machine you are logging onto is protected by an authentication firewall. The specified account is not allowed to authenticate to the machine' ELSE
                                                                                           EXTRACT_TOKEN(strings, 9, '|')
       END END AS SubStatus,
/*       CASE EventID WHEN 4625 THEN EXTRACT_TOKEN(strings, 7, '|') END AS Status, */
/*       CASE EventID WHEN 4625 THEN EXTRACT_TOKEN(strings, 9, '|') END AS SubStatus, */
	CASE EventID WHEN 4624 THEN EXTRACT_TOKEN(strings, 9, '|')
           WHEN 4625 THEN EXTRACT_TOKEN(strings, 11, '|') 
       END AS AuthPackage,
	CASE EventID WHEN 4624 THEN EXTRACT_TOKEN(Strings, 11, '|')
           WHEN 4625 THEN EXTRACT_TOKEN(Strings, 13, '|')
               WHEN 4648 THEN EXTRACT_TOKEN(Strings, 8, '|')
                   WHEN 4778 THEN EXTRACT_TOKEN(Strings, 4, '|')
                       WHEN 4779 THEN EXTRACT_TOKEN(Strings, 4, '|')
       END AS Workstation,
	CASE EventID WHEN 4624 THEN EXTRACT_TOKEN(Strings, 18, '|')
           WHEN 4625 THEN EXTRACT_TOKEN(Strings, 19, '|')
               WHEN 4648 THEN EXTRACT_TOKEN(Strings, 12, '|')
                   WHEN 4778 THEN EXTRACT_TOKEN(Strings, 5, '|')
                       WHEN 4779 THEN EXTRACT_TOKEN(Strings, 5, '|')
       END AS SourceIP

FROM '[LOGFILEPATH]'
WHERE EventID IN (4624;4625;4634;4647;4648;4672;4778;4779;4800;4801;4802;4803) AND
	Username NOT IN ('SYSTEM'; 'ANONYMOUS LOGON'; 'LOCAL SERVICE'; 'NETWORK SERVICE') AND
		Domain NOT IN ('NT AUTHORITY')</QueryData>
    <QueryID>fd8c1f54-5c8e-490d-b4a2-5133f3dc6cd4</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2019-03-06T07:14:52.2795865-06:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Report: Detailed Network Share Access</QueryName>
    <QueryDescription>Security eventid 5145</QueryDescription>
    <QueryData>select TimeGenerated, EventID,
'A network share object was checked to see whether client can be granted desired access.' AS Description,
extract_token(Strings,1,'|') as Username,
extract_token(Strings,2,'|') as Domain,
extract_token(Strings,3,'|') as LogonID,
extract_token(Strings,5,'|') as SourceIP, 
extract_token(Strings,7,'|') as SharePath,
extract_token(Strings,9,'|') as RelativeTargetFileName,
REPLACE_CHR(REPLACE_STR(REPLACE_STR(REPLACE_STR(REPLACE_STR(REPLACE_STR(REPLACE_STR(REPLACE_STR(REPLACE_STR(REPLACE_STR(REPLACE_STR(REPLACE_STR(REPLACE_STR(REPLACE_STR(REPLACE_STR(REPLACE_STR(extract_token(Strings,11,'|'),'%%1537\u000D\u000A','DELETE, '),'%%1538\u000D\u000A','READ_CONTROL, '),'%%1539\u000D\u000A','WRITE_DAC, '),'%%1540\u000D\u000A','WRITE_OWNER, '),'%%1541\u000D\u000A','SYNCHRONIZE, '),'%%1542\u000D\u000A','ACCESS_SYS_SEC, '),'%%4416\u000D\u000A','ReadData (or ListDirectory), '),'%%4417\u000D\u000A','WriteData (or AddFile), '),'%%4418\u000D\u000A','AppendData (or AddSubdirectory), '),'%%4419\u000D\u000A','ReadEA, '),'%%4420\u000D\u000A','WriteEA, '),'%%4421\u000D\u000A','Execute (or Traverse), '),'%%4422\u000D\u000A','DeleteChild, '),'%%4423\u000D\u000A','ReadAttributes, '),'%%4424\u000D\u000A','WriteAttributes, '),'\u0009','') AS Accesses
from '[LOGFILEPATH]'  where eventid=5145</QueryData>
    <QueryID>208544bd-fed3-4e32-9790-cb03a50720b1</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2019-02-27T11:26:49.6171034-06:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>REGISTRY: Writes Since Previous Date</QueryName>
    <QueryDescription>Find all Key\Values written to since the chosen date</QueryDescription>
    <QueryData>/*  Find Registry values that have been writtin to since ??? */

SELECT Path, ValueName, Value
FROM \\COMPUTER\HKCU\SOFTWARE\MICROSOFT /* &lt;- \\Computer\HIVE\KEY */
WHERE LastWriteTime &gt;= SUB(SYSTEM_TIMESTAMP(), TIMESTAMP('0000-02-10', 'yyyy-MM-dd')) /* &lt;- date since modified */</QueryData>
    <QueryID>665b6b82-99d5-44ac-9433-3da4bd94421b</QueryID>
    <LogType>REGLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2013-06-01T21:51:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Registry: USBSTOR</QueryName>
    <QueryDescription>Lists Vendor, Product, Version, and Serial number of usb devices.
*NOTE: You need to point this at the asset you want to examine.
Example: FROM \\&lt;computer_name&gt;\HKLM\SYSTEM\CurrentControlSet\Enum\USBSTOR</QueryDescription>
    <QueryData>SELECT ComputerName,
    extract_token(extract_token(Path,1,'&amp;'),1,'Ven_') as Vendor,
    extract_token(extract_token(Path,2,'&amp;'),1,'Prod_') as Product,
    extract_token(extract_token(extract_token(Path,5,'\\'),3,'&amp;'),1,'Rev_') as Version,
    extract_token(Path,6,'\\') as Serial_#,
    CASE strcnt(substr(extract_token(Path,6,'\\'),1,1), '&amp;') WHEN 1 THEN 'No' ELSE
        'Yes'
    END AS Unique_Serial
FROM \HKLM\SYSTEM\CurrentControlSet\Enum\USBSTOR
GROUP by ComputerName, Vendor, Product, Version, Serial_#</QueryData>
    <QueryID>01af254e-6f28-4e0d-b488-29e6e012e0eb</QueryID>
    <LogType>REGLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2018-02-19T11:59:14.3725772-06:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Registry: USB</QueryName>
    <QueryDescription>Lists Vendor-ID(VID) and Product-ID(PID) of usb devices.
*NOTE: You need to point this at the asset you want to examine.
Example: FROM \\&lt;computer_name&gt;\HKLM\SYSTEM\CurrentControlSet\Enum\USB</QueryDescription>
    <QueryData>SELECT ComputerName,
    extract_token(extract_token(Path,5,'\\'),0,'&amp;') as VID,
    extract_token(extract_token(Path,5,'\\'),1,'&amp;') as PID,
    extract_token(Path,6,'\\') as Serial_#

FROM \HKLM\SYSTEM\CurrentControlSet\Enum\USB
WHERE VID like '%VID%'
GROUP by ComputerName, VID, PID, Serial_#
</QueryData>
    <QueryID>45fec45f-d5f3-4bd8-a029-fde61cd3def3</QueryID>
    <LogType>REGLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-08-21T08:55:50.3830254-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Registry: TimeZoneInformation</QueryName>
    <QueryDescription>Identifies the current system time zone</QueryDescription>
    <QueryData>SELECT ComputerName, Value
FROM \HKLM\SYSTEM\CurrentControlSet\Control\TimeZoneInformation
WHERE ValueName = 'TimeZoneKeyName'
</QueryData>
    <QueryID>45c1dcd8-e9e3-4bc5-9bfb-763ef83ee10e</QueryID>
    <LogType>REGLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-08-22T13:12:55.381137-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Registry: Shares</QueryName>
    <QueryDescription>Lists the open network shares on the system</QueryDescription>
    <QueryData>SELECT ComputerName, ValueName as ShareName,
    CASE STRCNT(Value,'CSCFlags=0') WHEN 1 THEN 'Default' ELSE 
        CASE STRCNT(Value,'CSCFlags=16')  WHEN 1 THEN 'Auto Doc Caching' ELSE
            CASE STRCNT(Value,'CSCFlags=32')  WHEN 1 THEN 'Auto Program Caching' ELSE 
                CASE STRCNT(Value,'CSCFlags=48')  WHEN 1 THEN 'Cashing Disabled' ELSE
                    CASE STRCNT(Value,'CSCFlags=2048')  WHEN 1 THEN 'Default Win7-10' ELSE
                        Value
                    END
                END
            END
        END
    END as CSCFlag,
    CASE STRCNT(Value,'Permissions=0') WHEN 1 THEN 'GUI/PowerShell' ELSE
        CASE STRCNT(Value,'Permissions=9') WHEN 1 THEN 'Advanced File Sharing' ELSE
            CASE STRCNT(Value,'Permissions63') WHEN 1 THEN 'Command Line' ELSE
                Value
            END
        END
    END as Created_Via,
    CASE STRCNT(Value,'Type=0') WHEN 1 THEN 'Disk Drive/Folder' ELSE
        CASE STRCNT(Value,'Type=1') WHEN 1 THEN 'Printer' ELSE
            CASE STRCNT(Value,'Type=2') WHEN 1 THEN 'Device' ELSE
                CASE STRCNT(Value,'Type=3') WHEN 1 THEN 'IPC' ELSE
                    CASE STRCNT(Value,'Type=2147483648') WHEN 1 THEN 'Admin' ELSE
                        Value
                    END
                END
            END 
        END
    END as Type,
    extract_token(extract_token(Value,1,'Path='),0,'|') as Path,
    extract_token(extract_token(Value,1,'MaxUses='),0,'|') as MaxUsers
FROM \\&lt;computername&gt;\HKLM\SYSTEM\CurrentControlSet\Services\lanmanserver\Shares
Where KeyName = 'Shares'
</QueryData>
    <QueryID>4736b13b-92b9-4845-b04f-4e33576dab18</QueryID>
    <LogType>REGLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-10-11T08:56:20.9388374-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Registry: Mapped Network Drives</QueryName>
    <QueryDescription>Pull a list of mapped network drives from another network computer.</QueryDescription>
    <QueryData>SELECT ComputerName,
       extract_token(Path,1,'\\') AS SID,
       KeyName AS DriveLetter,
       ValueName,
       Value

FROM \\&lt;computername&gt;\HKU\

WHERE Path LIKE '%Network%' AND (ValueName LIKE 'RemotePath' OR ValueName LIKE 'ConnectionType')


</QueryData>
    <QueryID>dc188263-dc15-41b0-b408-d05a5c6b7c9e</QueryID>
    <LogType>REGLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-10-31T10:54:19.5256551-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Registry: Last Access Time</QueryName>
    <QueryDescription>(1 = Disabled) If disabled, the last access timestamp recording in the file system will not occur.</QueryDescription>
    <QueryData>SELECT ComputerName, Value
FROM \HKLM\SYSTEM\CurrentControlSet\Control\FileSystem
WHERE ValueName = 'NtfsDisableLastAccessUpdate'
</QueryData>
    <QueryID>72e342a9-a203-43af-b655-cd972d5bdd1f</QueryID>
    <LogType>REGLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-08-22T10:58:11.5681278-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Registry: GUIDs</QueryName>
    <QueryDescription>Lists GUIDs, Serial numbers and possibly drive letters of usb devices.
*NOTE: You need to point this at the asset you want to examine.
Example: FROM \\&lt;computer_name&gt;\HKLM\SYSTEM\MountedDevices</QueryDescription>
    <QueryData>SELECT ComputerName,
    CASE STRCNT(ValueName,'DosDevice') WHEN 1 THEN extract_token(ValueName,2,'\\') ELSE '' END as Drive_Letter,
    REPLACE_CHR(extract_token(ValueName,1,'{'),'}','') as GUID,
    REPLACE_CHR(extract_token(Value,2,'#'),'.','') as Serial_#
FROM \HKLM\SYSTEM\MountedDevices
Where Serial_# Like '%'


</QueryData>
    <QueryID>a675142a-c67b-4cd2-9807-c1ebb9625492</QueryID>
    <LogType>REGLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-08-21T10:49:27.7863034-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Registry: ComputerName</QueryName>
    <QueryDescription>Verify Computer Name.
Example: FROM \\&lt;computer_name&gt;\HKLM\SYSTEM\CurrentControlSet\Control\ComputerName\ComputerName</QueryDescription>
    <QueryData>SELECT Value AS ComputerName

FROM \\&lt;computer_name&gt;\HKLM\SYSTEM\CurrentControlSet\Control\ComputerName\ComputerName

WHERE ValueName LIKE 'ComputerName'</QueryData>
    <QueryID>8782fffa-0fb0-451a-a6a4-0e17dfa9106c</QueryID>
    <LogType>REGLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-11-02T09:04:31.4194007-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>Registry Event Rename</QueryName>
    <QueryDescription>Microsoft-Windows-Sysmon%4Operational.evtx (EventID 14)</QueryDescription>
    <QueryData>SELECT      
      TimeGenerated,
      EventID,
      EXTRACT_TOKEN(Strings,1,'|') AS ProcessGUID,
      EXTRACT_TOKEN(Strings,2,'|') AS ProcessID,
      EXTRACT_TOKEN(Strings,3,'|') AS Image,
      EXTRACT_TOKEN(Strings,4,'|') As EventType,
      EXTRACT_TOKEN(Strings,5,'|') As TargetObject 
FROM '[LOGFILEPATH]' 
WHERE EventID=14</QueryData>
    <QueryID>2cc87199-2a28-45f4-8b7d-42b6b4c64c77</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2018-02-07T06:59:59.2490297-06:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>RDP RemoteSession: Successful logon</QueryName>
    <QueryDescription>Microsoft-Windows-TerminalServices-RemoteConnectionManager%4Operational.evtx (EventID 1149)</QueryDescription>
    <QueryData>Select timegenerated as Date, 
	extract_token(strings, 0, '|') as user,
	extract_token(strings, 2, '|') as sourceip
FROM '[LOGFILEPATH]'
WHERE EventID = 1149
</QueryData>
    <QueryID>b025bffd-24e5-46b1-9d1d-c05db24d18a1</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:30:47.5506547-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>RDP RemoteSession: Group by user</QueryName>
    <QueryDescription>Microsoft-Windows-TerminalServices-RemoteConnectionManager%4Operational.evtx (EventID 1149)</QueryDescription>
    <QueryData>Select 
	extract_token(strings, 0, '|') as user,
	count(*) as CNT
FROM '[LOGFILEPATH]'
WHERE EventID = 1149
GROUP BY user
ORDER BY CNT DESC
</QueryData>
    <QueryID>77d3c228-6c6c-4a60-87d3-d758953a0322</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:30:24.0301707-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>RDP LocalSession: Successful logon</QueryName>
    <QueryDescription>Microsoft-Windows-TerminalServices-RemoteConnectionManager%4Operational.evtx (EventID 21)</QueryDescription>
    <QueryData>Select timegenerated as Date,
	extract_token(strings, 0, '|') as User,
       extract_token(strings, 1, '|') as SessionID,
	extract_token(strings, 2, '|') as SourceIP
FROM '[LOGFILEPATH]'
WHERE EventID = 21
</QueryData>
    <QueryID>66a59869-b638-4254-9d03-0a664b4fa87d</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2018-02-22T13:40:06.5082388-06:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>RDP LocalSession: Group by user</QueryName>
    <QueryDescription>Microsoft-Windows-TerminalServices-RemoteConnectionManager%4Operational.evtx (EventID 21)</QueryDescription>
    <QueryData>Select 
	extract_token(strings, 0, '|') as user,
	count(*) as CNT
FROM '[LOGFILEPATH]'
WHERE EventID = 21
GROUP BY user
ORDER BY CNT DESC
</QueryData>
    <QueryID>ffb22ceb-bc06-49c0-bd43-34e8334c4890</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2017-06-20T08:29:32.3985108-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>MBAM: Removable Device Mounts</QueryName>
    <QueryDescription>Microsoft-Windows-MBAM%4Operational.evtx (EventID 39,40)</QueryDescription>
    <QueryData>Select ComputerName,TimeGenerated as Date,
       CASE EventID WHEN 39 THEN 'RemovableDriveMounted' ELSE 'RemovableDriveDismounted' END AS TaskCategory,
       substr(extract_token(Strings,3, '\\'),7,35) as Volume_GUID
FROM '[LOGFILEPATH]'
WHERE EventID in (39;40)</QueryData>
    <QueryID>acc3fdd1-c897-482c-9b4a-f1f0ab764ae7</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2018-02-19T12:54:05.6847419-06:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>FS: Users folder</QueryName>
    <QueryDescription>List of files in Users folder (MD5)</QueryDescription>
    <QueryData>SELECT Path,
Name,
Size,
Attributes,
CreationTime,
LastAccessTime,
LastWriteTime,
EXTRACT_EXTENSION(Name) AS EXT,
HASHMD5_FILE(Path) AS MD5
FROM '\\localhoast\c$\Users\*'
WHERE MD5 IS NOT NULL
ORDER BY Path</QueryData>
    <QueryID>5267df28-bf7d-4637-b927-18d799283357</QueryID>
    <LogType>FSLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2018-04-06T11:03:10.4430314-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>FS: ProgramData</QueryName>
    <QueryDescription>List of files in ProgramData folder (MD5)</QueryDescription>
    <QueryData>SELECT Path,
Name,
Size,
Attributes,
CreationTime,
LastAccessTime,
LastWriteTime,
EXTRACT_EXTENSION(Name) AS EXT,
HASHMD5_FILE(Path) AS MD5
FROM '\\localhost\c$\ProgramData\*'
WHERE MD5 IS NOT NULL
ORDER BY Path</QueryData>
    <QueryID>0469bb32-4045-4f1d-87e8-886c890c08f0</QueryID>
    <LogType>FSLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2018-04-06T11:16:53.5649598-05:00</DateModified>
  </LPQuery>
  <LPQuery>
    <QueryName>DriverFrameworks-UserMode:USB</QueryName>
    <QueryDescription>Microsoft-Windows-DriverFrameworks-UserMode%4Operational.evtx</QueryDescription>
    <QueryData>SELECT TimeGenerated AS Date, ComputerName,
CASE EventID WHEN 2003 THEN 'Connect' ELSE
    'Disconnect'
END AS Event,
extract_token(extract_token(Strings,1,'&amp;'),1,'VEN_') as Vendor,
extract_token(extract_token(Strings,2,'&amp;'),1,'PROD_') as Product,
extract_token(extract_token(extract_token(Strings,3,'&amp;'),1,'REV_'),0,'#') as Version,
extract_token(Strings,2,'#') as Serial_#,
CASE strcnt(substr(extract_token(Strings,2,'#'),1,1), '&amp;') WHEN 1 THEN 'No' ELSE
    'Yes'
END AS Unique_Serial
FROM '[LOGFILEPATH]'
WHERE EventID=2003 OR (EventID=2100 AND Strings LIKE '%27|23%')
ORDER BY Date DESC</QueryData>
    <QueryID>e96bd70c-f08a-4d44-a533-6ff9b15c04f5</QueryID>
    <LogType>EVTLOG</LogType>
    <QueryCategory>FAV</QueryCategory>
    <IsFavorite>true</IsFavorite>
    <DateModified>2018-10-29T09:18:29.2046502-05:00</DateModified>
  </LPQuery>
</ArrayOfLPQuery>